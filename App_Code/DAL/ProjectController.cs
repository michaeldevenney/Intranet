using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL
{
    /// <summary>
    /// Controller class for A_Projects
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class ProjectController
    {
        // Preload our schema..
        Project thisSchemaLoad = new Project();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public ProjectCollection FetchAll()
        {
            ProjectCollection coll = new ProjectCollection();
            Query qry = new Query(Project.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public ProjectCollection FetchByID(object Id)
        {
            ProjectCollection coll = new ProjectCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public ProjectCollection FetchByQuery(Query qry)
        {
            ProjectCollection coll = new ProjectCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (Project.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (Project.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string ProjectNumber,string ProjectName,string ProjectLead,string ProjectType,string ProjectPhase,string ProjectActivity,string Location,int? PMUserID,int? SalespersonID,string PMAssigned,string DirectoryPath,decimal? PercentComplete,decimal? ShippingPercentage,decimal? InstallPercentage,string RoomSummary,string DoorSummary,int? TotalTrucks,int? TrucksShippedToDate,int? TrucksRemaining,decimal? TakeOffBlockCount,decimal? BlocksShippedToDate,decimal? BlocksInstalledToDate,decimal? SteelTotal,decimal? SteelShipped,decimal? SteelInstalled,decimal? LeadTotal,decimal? LeadShipped,decimal? LeadInstalled,DateTime? BearingPlateCompletion,DateTime? SteelSetDate,decimal? AvgNumberOfWorkers,string QAStatus,DateTime? ProjectStartDate,DateTime? DoorFrameInstallDate,DateTime? DoorInstallDate,string QualityOfWork,string CoordinatedItemsOpen,DateTime? ProspectusDate,DateTime? LeadShieldingShipDate,DateTime? LeadShieldingInstallDate,DateTime? SteelShieldingOrderDate,DateTime? SteelShieldingShipDate,DateTime? SteelShieldingInstallDate,DateTime? LeadShieldingOrderDate,int? QAInspections,int? NumberOfRooms,DateTime? InitialTakeOffDate,decimal? InitialTakeOffAmount,DateTime? InitialProposalDate,decimal? InitialProposalAmount,DateTime? ContractSentDate,DateTime? ContractSignedDate,DateTime? AuthorizationToProceedDate,DateTime? InstallStartDate,DateTime? InstallCompleteDate,DateTime? ShippingStartDate,DateTime? ShippingCompleteDate,DateTime? FirstTruckOutFleetwood,DateTime? FirstTruckOnsite,DateTime? LastTruckOutFleetwood,DateTime? LastTruckOnsite,DateTime? Created,string WallDiagramFile,string CreatedBy,string UpdatedBy,DateTime? Updated)
	    {
		    Project item = new Project();
		    
            item.ProjectNumber = ProjectNumber;
            
            item.ProjectName = ProjectName;
            
            item.ProjectLead = ProjectLead;
            
            item.ProjectType = ProjectType;
            
            item.ProjectPhase = ProjectPhase;
            
            item.ProjectActivity = ProjectActivity;
            
            item.Location = Location;
            
            item.PMUserID = PMUserID;
            
            item.SalespersonID = SalespersonID;
            
            item.PMAssigned = PMAssigned;
            
            item.DirectoryPath = DirectoryPath;
            
            item.PercentComplete = PercentComplete;
            
            item.ShippingPercentage = ShippingPercentage;
            
            item.InstallPercentage = InstallPercentage;
            
            item.RoomSummary = RoomSummary;
            
            item.DoorSummary = DoorSummary;
            
            item.TotalTrucks = TotalTrucks;
            
            item.TrucksShippedToDate = TrucksShippedToDate;
            
            item.TrucksRemaining = TrucksRemaining;
            
            item.TakeOffBlockCount = TakeOffBlockCount;
            
            item.BlocksShippedToDate = BlocksShippedToDate;
            
            item.BlocksInstalledToDate = BlocksInstalledToDate;
            
            item.SteelTotal = SteelTotal;
            
            item.SteelShipped = SteelShipped;
            
            item.SteelInstalled = SteelInstalled;
            
            item.LeadTotal = LeadTotal;
            
            item.LeadShipped = LeadShipped;
            
            item.LeadInstalled = LeadInstalled;
            
            item.BearingPlateCompletion = BearingPlateCompletion;
            
            item.SteelSetDate = SteelSetDate;
            
            item.AvgNumberOfWorkers = AvgNumberOfWorkers;
            
            item.QAStatus = QAStatus;
            
            item.ProjectStartDate = ProjectStartDate;
            
            item.DoorFrameInstallDate = DoorFrameInstallDate;
            
            item.DoorInstallDate = DoorInstallDate;
            
            item.QualityOfWork = QualityOfWork;
            
            item.CoordinatedItemsOpen = CoordinatedItemsOpen;
            
            item.ProspectusDate = ProspectusDate;
            
            item.LeadShieldingShipDate = LeadShieldingShipDate;
            
            item.LeadShieldingInstallDate = LeadShieldingInstallDate;
            
            item.SteelShieldingOrderDate = SteelShieldingOrderDate;
            
            item.SteelShieldingShipDate = SteelShieldingShipDate;
            
            item.SteelShieldingInstallDate = SteelShieldingInstallDate;
            
            item.LeadShieldingOrderDate = LeadShieldingOrderDate;
            
            item.QAInspections = QAInspections;
            
            item.NumberOfRooms = NumberOfRooms;
            
            item.InitialTakeOffDate = InitialTakeOffDate;
            
            item.InitialTakeOffAmount = InitialTakeOffAmount;
            
            item.InitialProposalDate = InitialProposalDate;
            
            item.InitialProposalAmount = InitialProposalAmount;
            
            item.ContractSentDate = ContractSentDate;
            
            item.ContractSignedDate = ContractSignedDate;
            
            item.AuthorizationToProceedDate = AuthorizationToProceedDate;
            
            item.InstallStartDate = InstallStartDate;
            
            item.InstallCompleteDate = InstallCompleteDate;
            
            item.ShippingStartDate = ShippingStartDate;
            
            item.ShippingCompleteDate = ShippingCompleteDate;
            
            item.FirstTruckOutFleetwood = FirstTruckOutFleetwood;
            
            item.FirstTruckOnsite = FirstTruckOnsite;
            
            item.LastTruckOutFleetwood = LastTruckOutFleetwood;
            
            item.LastTruckOnsite = LastTruckOnsite;
            
            item.Created = Created;
            
            item.WallDiagramFile = WallDiagramFile;
            
            item.CreatedBy = CreatedBy;
            
            item.UpdatedBy = UpdatedBy;
            
            item.Updated = Updated;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,string ProjectNumber,string ProjectName,string ProjectLead,string ProjectType,string ProjectPhase,string ProjectActivity,string Location,int? PMUserID,int? SalespersonID,string PMAssigned,string DirectoryPath,decimal? PercentComplete,decimal? ShippingPercentage,decimal? InstallPercentage,string RoomSummary,string DoorSummary,int? TotalTrucks,int? TrucksShippedToDate,int? TrucksRemaining,decimal? TakeOffBlockCount,decimal? BlocksShippedToDate,decimal? BlocksInstalledToDate,decimal? SteelTotal,decimal? SteelShipped,decimal? SteelInstalled,decimal? LeadTotal,decimal? LeadShipped,decimal? LeadInstalled,DateTime? BearingPlateCompletion,DateTime? SteelSetDate,decimal? AvgNumberOfWorkers,string QAStatus,DateTime? ProjectStartDate,DateTime? DoorFrameInstallDate,DateTime? DoorInstallDate,string QualityOfWork,string CoordinatedItemsOpen,DateTime? ProspectusDate,DateTime? LeadShieldingShipDate,DateTime? LeadShieldingInstallDate,DateTime? SteelShieldingOrderDate,DateTime? SteelShieldingShipDate,DateTime? SteelShieldingInstallDate,DateTime? LeadShieldingOrderDate,int? QAInspections,int? NumberOfRooms,DateTime? InitialTakeOffDate,decimal? InitialTakeOffAmount,DateTime? InitialProposalDate,decimal? InitialProposalAmount,DateTime? ContractSentDate,DateTime? ContractSignedDate,DateTime? AuthorizationToProceedDate,DateTime? InstallStartDate,DateTime? InstallCompleteDate,DateTime? ShippingStartDate,DateTime? ShippingCompleteDate,DateTime? FirstTruckOutFleetwood,DateTime? FirstTruckOnsite,DateTime? LastTruckOutFleetwood,DateTime? LastTruckOnsite,DateTime? Created,string WallDiagramFile,string CreatedBy,string UpdatedBy,DateTime? Updated)
	    {
		    Project item = new Project();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.ProjectNumber = ProjectNumber;
				
			item.ProjectName = ProjectName;
				
			item.ProjectLead = ProjectLead;
				
			item.ProjectType = ProjectType;
				
			item.ProjectPhase = ProjectPhase;
				
			item.ProjectActivity = ProjectActivity;
				
			item.Location = Location;
				
			item.PMUserID = PMUserID;
				
			item.SalespersonID = SalespersonID;
				
			item.PMAssigned = PMAssigned;
				
			item.DirectoryPath = DirectoryPath;
				
			item.PercentComplete = PercentComplete;
				
			item.ShippingPercentage = ShippingPercentage;
				
			item.InstallPercentage = InstallPercentage;
				
			item.RoomSummary = RoomSummary;
				
			item.DoorSummary = DoorSummary;
				
			item.TotalTrucks = TotalTrucks;
				
			item.TrucksShippedToDate = TrucksShippedToDate;
				
			item.TrucksRemaining = TrucksRemaining;
				
			item.TakeOffBlockCount = TakeOffBlockCount;
				
			item.BlocksShippedToDate = BlocksShippedToDate;
				
			item.BlocksInstalledToDate = BlocksInstalledToDate;
				
			item.SteelTotal = SteelTotal;
				
			item.SteelShipped = SteelShipped;
				
			item.SteelInstalled = SteelInstalled;
				
			item.LeadTotal = LeadTotal;
				
			item.LeadShipped = LeadShipped;
				
			item.LeadInstalled = LeadInstalled;
				
			item.BearingPlateCompletion = BearingPlateCompletion;
				
			item.SteelSetDate = SteelSetDate;
				
			item.AvgNumberOfWorkers = AvgNumberOfWorkers;
				
			item.QAStatus = QAStatus;
				
			item.ProjectStartDate = ProjectStartDate;
				
			item.DoorFrameInstallDate = DoorFrameInstallDate;
				
			item.DoorInstallDate = DoorInstallDate;
				
			item.QualityOfWork = QualityOfWork;
				
			item.CoordinatedItemsOpen = CoordinatedItemsOpen;
				
			item.ProspectusDate = ProspectusDate;
				
			item.LeadShieldingShipDate = LeadShieldingShipDate;
				
			item.LeadShieldingInstallDate = LeadShieldingInstallDate;
				
			item.SteelShieldingOrderDate = SteelShieldingOrderDate;
				
			item.SteelShieldingShipDate = SteelShieldingShipDate;
				
			item.SteelShieldingInstallDate = SteelShieldingInstallDate;
				
			item.LeadShieldingOrderDate = LeadShieldingOrderDate;
				
			item.QAInspections = QAInspections;
				
			item.NumberOfRooms = NumberOfRooms;
				
			item.InitialTakeOffDate = InitialTakeOffDate;
				
			item.InitialTakeOffAmount = InitialTakeOffAmount;
				
			item.InitialProposalDate = InitialProposalDate;
				
			item.InitialProposalAmount = InitialProposalAmount;
				
			item.ContractSentDate = ContractSentDate;
				
			item.ContractSignedDate = ContractSignedDate;
				
			item.AuthorizationToProceedDate = AuthorizationToProceedDate;
				
			item.InstallStartDate = InstallStartDate;
				
			item.InstallCompleteDate = InstallCompleteDate;
				
			item.ShippingStartDate = ShippingStartDate;
				
			item.ShippingCompleteDate = ShippingCompleteDate;
				
			item.FirstTruckOutFleetwood = FirstTruckOutFleetwood;
				
			item.FirstTruckOnsite = FirstTruckOnsite;
				
			item.LastTruckOutFleetwood = LastTruckOutFleetwood;
				
			item.LastTruckOnsite = LastTruckOnsite;
				
			item.Created = Created;
				
			item.WallDiagramFile = WallDiagramFile;
				
			item.CreatedBy = CreatedBy;
				
			item.UpdatedBy = UpdatedBy;
				
			item.Updated = Updated;
				
	        item.Save(UserName);
	    }
    }
}
