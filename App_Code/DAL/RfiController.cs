using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL
{
    /// <summary>
    /// Controller class for PM_RFI
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class RfiController
    {
        // Preload our schema..
        Rfi thisSchemaLoad = new Rfi();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public RfiCollection FetchAll()
        {
            RfiCollection coll = new RfiCollection();
            Query qry = new Query(Rfi.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public RfiCollection FetchByID(object Id)
        {
            RfiCollection coll = new RfiCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public RfiCollection FetchByQuery(Query qry)
        {
            RfiCollection coll = new RfiCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (Rfi.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (Rfi.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int ProjectID,string ProjectName,string CoreconID,string Subject,string Priority,string Request,string Suggestion,string Response,string RefDrawingNumber,string RefLocation,string RefSpecSection,string RefOther,string Status,string PMAssigned,int? PMUserID,DateTime? Updated,string UpdatedBy,int? UpdatedByID,string Closed,DateTime? Submitted,string SubmittedBy,int? SubmittedByID)
	    {
		    Rfi item = new Rfi();
		    
            item.ProjectID = ProjectID;
            
            item.ProjectName = ProjectName;
            
            item.CoreconID = CoreconID;
            
            item.Subject = Subject;
            
            item.Priority = Priority;
            
            item.Request = Request;
            
            item.Suggestion = Suggestion;
            
            item.Response = Response;
            
            item.RefDrawingNumber = RefDrawingNumber;
            
            item.RefLocation = RefLocation;
            
            item.RefSpecSection = RefSpecSection;
            
            item.RefOther = RefOther;
            
            item.Status = Status;
            
            item.PMAssigned = PMAssigned;
            
            item.PMUserID = PMUserID;
            
            item.Updated = Updated;
            
            item.UpdatedBy = UpdatedBy;
            
            item.UpdatedByID = UpdatedByID;
            
            item.Closed = Closed;
            
            item.Submitted = Submitted;
            
            item.SubmittedBy = SubmittedBy;
            
            item.SubmittedByID = SubmittedByID;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,int ProjectID,string ProjectName,string CoreconID,string Subject,string Priority,string Request,string Suggestion,string Response,string RefDrawingNumber,string RefLocation,string RefSpecSection,string RefOther,string Status,string PMAssigned,int? PMUserID,DateTime? Updated,string UpdatedBy,int? UpdatedByID,string Closed,DateTime? Submitted,string SubmittedBy,int? SubmittedByID)
	    {
		    Rfi item = new Rfi();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.ProjectID = ProjectID;
				
			item.ProjectName = ProjectName;
				
			item.CoreconID = CoreconID;
				
			item.Subject = Subject;
				
			item.Priority = Priority;
				
			item.Request = Request;
				
			item.Suggestion = Suggestion;
				
			item.Response = Response;
				
			item.RefDrawingNumber = RefDrawingNumber;
				
			item.RefLocation = RefLocation;
				
			item.RefSpecSection = RefSpecSection;
				
			item.RefOther = RefOther;
				
			item.Status = Status;
				
			item.PMAssigned = PMAssigned;
				
			item.PMUserID = PMUserID;
				
			item.Updated = Updated;
				
			item.UpdatedBy = UpdatedBy;
				
			item.UpdatedByID = UpdatedByID;
				
			item.Closed = Closed;
				
			item.Submitted = Submitted;
				
			item.SubmittedBy = SubmittedBy;
				
			item.SubmittedByID = SubmittedByID;
				
	        item.Save(UserName);
	    }
    }
}
