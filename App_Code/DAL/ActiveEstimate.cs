using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL{
    /// <summary>
    /// Strongly-typed collection for the ActiveEstimate class.
    /// </summary>
    [Serializable]
    public partial class ActiveEstimateCollection : ReadOnlyList<ActiveEstimate, ActiveEstimateCollection>
    {        
        public ActiveEstimateCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the ActiveEstimates view.
    /// </summary>
    [Serializable]
    public partial class ActiveEstimate : ReadOnlyRecord<ActiveEstimate>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("ActiveEstimates", TableType.View, DataService.GetInstance("VeritasInfo"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarProjectName = new TableSchema.TableColumn(schema);
                colvarProjectName.ColumnName = "ProjectName";
                colvarProjectName.DataType = DbType.AnsiString;
                colvarProjectName.MaxLength = 100;
                colvarProjectName.AutoIncrement = false;
                colvarProjectName.IsNullable = false;
                colvarProjectName.IsPrimaryKey = false;
                colvarProjectName.IsForeignKey = false;
                colvarProjectName.IsReadOnly = false;
                
                schema.Columns.Add(colvarProjectName);
                
                TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);
                colvarName.ColumnName = "Name";
                colvarName.DataType = DbType.AnsiString;
                colvarName.MaxLength = 50;
                colvarName.AutoIncrement = false;
                colvarName.IsNullable = false;
                colvarName.IsPrimaryKey = false;
                colvarName.IsForeignKey = false;
                colvarName.IsReadOnly = false;
                
                schema.Columns.Add(colvarName);
                
                TableSchema.TableColumn colvarEstimateNumber = new TableSchema.TableColumn(schema);
                colvarEstimateNumber.ColumnName = "EstimateNumber";
                colvarEstimateNumber.DataType = DbType.AnsiString;
                colvarEstimateNumber.MaxLength = 50;
                colvarEstimateNumber.AutoIncrement = false;
                colvarEstimateNumber.IsNullable = true;
                colvarEstimateNumber.IsPrimaryKey = false;
                colvarEstimateNumber.IsForeignKey = false;
                colvarEstimateNumber.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateNumber);
                
                TableSchema.TableColumn colvarContact = new TableSchema.TableColumn(schema);
                colvarContact.ColumnName = "Contact";
                colvarContact.DataType = DbType.AnsiString;
                colvarContact.MaxLength = 50;
                colvarContact.AutoIncrement = false;
                colvarContact.IsNullable = true;
                colvarContact.IsPrimaryKey = false;
                colvarContact.IsForeignKey = false;
                colvarContact.IsReadOnly = false;
                
                schema.Columns.Add(colvarContact);
                
                TableSchema.TableColumn colvarReceived = new TableSchema.TableColumn(schema);
                colvarReceived.ColumnName = "Received";
                colvarReceived.DataType = DbType.DateTime;
                colvarReceived.MaxLength = 0;
                colvarReceived.AutoIncrement = false;
                colvarReceived.IsNullable = true;
                colvarReceived.IsPrimaryKey = false;
                colvarReceived.IsForeignKey = false;
                colvarReceived.IsReadOnly = false;
                
                schema.Columns.Add(colvarReceived);
                
                TableSchema.TableColumn colvarResponseRequestedBy = new TableSchema.TableColumn(schema);
                colvarResponseRequestedBy.ColumnName = "ResponseRequestedBy";
                colvarResponseRequestedBy.DataType = DbType.DateTime;
                colvarResponseRequestedBy.MaxLength = 0;
                colvarResponseRequestedBy.AutoIncrement = false;
                colvarResponseRequestedBy.IsNullable = true;
                colvarResponseRequestedBy.IsPrimaryKey = false;
                colvarResponseRequestedBy.IsForeignKey = false;
                colvarResponseRequestedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarResponseRequestedBy);
                
                TableSchema.TableColumn colvarComplete = new TableSchema.TableColumn(schema);
                colvarComplete.ColumnName = "Complete";
                colvarComplete.DataType = DbType.Boolean;
                colvarComplete.MaxLength = 0;
                colvarComplete.AutoIncrement = false;
                colvarComplete.IsNullable = true;
                colvarComplete.IsPrimaryKey = false;
                colvarComplete.IsForeignKey = false;
                colvarComplete.IsReadOnly = false;
                
                schema.Columns.Add(colvarComplete);
                
                TableSchema.TableColumn colvarMoreInfoDate = new TableSchema.TableColumn(schema);
                colvarMoreInfoDate.ColumnName = "MoreInfoDate";
                colvarMoreInfoDate.DataType = DbType.DateTime;
                colvarMoreInfoDate.MaxLength = 0;
                colvarMoreInfoDate.AutoIncrement = false;
                colvarMoreInfoDate.IsNullable = true;
                colvarMoreInfoDate.IsPrimaryKey = false;
                colvarMoreInfoDate.IsForeignKey = false;
                colvarMoreInfoDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarMoreInfoDate);
                
                TableSchema.TableColumn colvarInitialDrawingDate = new TableSchema.TableColumn(schema);
                colvarInitialDrawingDate.ColumnName = "InitialDrawingDate";
                colvarInitialDrawingDate.DataType = DbType.DateTime;
                colvarInitialDrawingDate.MaxLength = 0;
                colvarInitialDrawingDate.AutoIncrement = false;
                colvarInitialDrawingDate.IsNullable = true;
                colvarInitialDrawingDate.IsPrimaryKey = false;
                colvarInitialDrawingDate.IsForeignKey = false;
                colvarInitialDrawingDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarInitialDrawingDate);
                
                TableSchema.TableColumn colvarThicknessesDate = new TableSchema.TableColumn(schema);
                colvarThicknessesDate.ColumnName = "ThicknessesDate";
                colvarThicknessesDate.DataType = DbType.DateTime;
                colvarThicknessesDate.MaxLength = 0;
                colvarThicknessesDate.AutoIncrement = false;
                colvarThicknessesDate.IsNullable = true;
                colvarThicknessesDate.IsPrimaryKey = false;
                colvarThicknessesDate.IsForeignKey = false;
                colvarThicknessesDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarThicknessesDate);
                
                TableSchema.TableColumn colvarTakeoffDate = new TableSchema.TableColumn(schema);
                colvarTakeoffDate.ColumnName = "TakeoffDate";
                colvarTakeoffDate.DataType = DbType.DateTime;
                colvarTakeoffDate.MaxLength = 0;
                colvarTakeoffDate.AutoIncrement = false;
                colvarTakeoffDate.IsNullable = true;
                colvarTakeoffDate.IsPrimaryKey = false;
                colvarTakeoffDate.IsForeignKey = false;
                colvarTakeoffDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarTakeoffDate);
                
                TableSchema.TableColumn colvarEstimateCompletedDate = new TableSchema.TableColumn(schema);
                colvarEstimateCompletedDate.ColumnName = "EstimateCompletedDate";
                colvarEstimateCompletedDate.DataType = DbType.DateTime;
                colvarEstimateCompletedDate.MaxLength = 0;
                colvarEstimateCompletedDate.AutoIncrement = false;
                colvarEstimateCompletedDate.IsNullable = true;
                colvarEstimateCompletedDate.IsPrimaryKey = false;
                colvarEstimateCompletedDate.IsForeignKey = false;
                colvarEstimateCompletedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateCompletedDate);
                
                TableSchema.TableColumn colvarEstimateReviewDate = new TableSchema.TableColumn(schema);
                colvarEstimateReviewDate.ColumnName = "EstimateReviewDate";
                colvarEstimateReviewDate.DataType = DbType.DateTime;
                colvarEstimateReviewDate.MaxLength = 0;
                colvarEstimateReviewDate.AutoIncrement = false;
                colvarEstimateReviewDate.IsNullable = true;
                colvarEstimateReviewDate.IsPrimaryKey = false;
                colvarEstimateReviewDate.IsForeignKey = false;
                colvarEstimateReviewDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateReviewDate);
                
                TableSchema.TableColumn colvarEstimateSentDate = new TableSchema.TableColumn(schema);
                colvarEstimateSentDate.ColumnName = "EstimateSentDate";
                colvarEstimateSentDate.DataType = DbType.DateTime;
                colvarEstimateSentDate.MaxLength = 0;
                colvarEstimateSentDate.AutoIncrement = false;
                colvarEstimateSentDate.IsNullable = true;
                colvarEstimateSentDate.IsPrimaryKey = false;
                colvarEstimateSentDate.IsForeignKey = false;
                colvarEstimateSentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateSentDate);
                
                TableSchema.TableColumn colvarEstimateTotal = new TableSchema.TableColumn(schema);
                colvarEstimateTotal.ColumnName = "EstimateTotal";
                colvarEstimateTotal.DataType = DbType.Currency;
                colvarEstimateTotal.MaxLength = 0;
                colvarEstimateTotal.AutoIncrement = false;
                colvarEstimateTotal.IsNullable = true;
                colvarEstimateTotal.IsPrimaryKey = false;
                colvarEstimateTotal.IsForeignKey = false;
                colvarEstimateTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarEstimateTotal);
                
                TableSchema.TableColumn colvarDoorsTotal = new TableSchema.TableColumn(schema);
                colvarDoorsTotal.ColumnName = "DoorsTotal";
                colvarDoorsTotal.DataType = DbType.Currency;
                colvarDoorsTotal.MaxLength = 0;
                colvarDoorsTotal.AutoIncrement = false;
                colvarDoorsTotal.IsNullable = true;
                colvarDoorsTotal.IsPrimaryKey = false;
                colvarDoorsTotal.IsForeignKey = false;
                colvarDoorsTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarDoorsTotal);
                
                TableSchema.TableColumn colvarInteriorsTotal = new TableSchema.TableColumn(schema);
                colvarInteriorsTotal.ColumnName = "InteriorsTotal";
                colvarInteriorsTotal.DataType = DbType.Currency;
                colvarInteriorsTotal.MaxLength = 0;
                colvarInteriorsTotal.AutoIncrement = false;
                colvarInteriorsTotal.IsNullable = true;
                colvarInteriorsTotal.IsPrimaryKey = false;
                colvarInteriorsTotal.IsForeignKey = false;
                colvarInteriorsTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarInteriorsTotal);
                
                TableSchema.TableColumn colvarBunkerTotal = new TableSchema.TableColumn(schema);
                colvarBunkerTotal.ColumnName = "BunkerTotal";
                colvarBunkerTotal.DataType = DbType.Currency;
                colvarBunkerTotal.MaxLength = 0;
                colvarBunkerTotal.AutoIncrement = false;
                colvarBunkerTotal.IsNullable = true;
                colvarBunkerTotal.IsPrimaryKey = false;
                colvarBunkerTotal.IsForeignKey = false;
                colvarBunkerTotal.IsReadOnly = false;
                
                schema.Columns.Add(colvarBunkerTotal);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["VeritasInfo"].AddSchema("ActiveEstimates",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public ActiveEstimate()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public ActiveEstimate(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public ActiveEstimate(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public ActiveEstimate(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ProjectName")]
        [Bindable(true)]
        public string ProjectName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ProjectName");
		    }
            set 
		    {
			    SetColumnValue("ProjectName", value);
            }
        }
	      
        [XmlAttribute("Name")]
        [Bindable(true)]
        public string Name 
	    {
		    get
		    {
			    return GetColumnValue<string>("Name");
		    }
            set 
		    {
			    SetColumnValue("Name", value);
            }
        }
	      
        [XmlAttribute("EstimateNumber")]
        [Bindable(true)]
        public string EstimateNumber 
	    {
		    get
		    {
			    return GetColumnValue<string>("EstimateNumber");
		    }
            set 
		    {
			    SetColumnValue("EstimateNumber", value);
            }
        }
	      
        [XmlAttribute("Contact")]
        [Bindable(true)]
        public string Contact 
	    {
		    get
		    {
			    return GetColumnValue<string>("Contact");
		    }
            set 
		    {
			    SetColumnValue("Contact", value);
            }
        }
	      
        [XmlAttribute("Received")]
        [Bindable(true)]
        public DateTime? Received 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("Received");
		    }
            set 
		    {
			    SetColumnValue("Received", value);
            }
        }
	      
        [XmlAttribute("ResponseRequestedBy")]
        [Bindable(true)]
        public DateTime? ResponseRequestedBy 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ResponseRequestedBy");
		    }
            set 
		    {
			    SetColumnValue("ResponseRequestedBy", value);
            }
        }
	      
        [XmlAttribute("Complete")]
        [Bindable(true)]
        public bool? Complete 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("Complete");
		    }
            set 
		    {
			    SetColumnValue("Complete", value);
            }
        }
	      
        [XmlAttribute("MoreInfoDate")]
        [Bindable(true)]
        public DateTime? MoreInfoDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("MoreInfoDate");
		    }
            set 
		    {
			    SetColumnValue("MoreInfoDate", value);
            }
        }
	      
        [XmlAttribute("InitialDrawingDate")]
        [Bindable(true)]
        public DateTime? InitialDrawingDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("InitialDrawingDate");
		    }
            set 
		    {
			    SetColumnValue("InitialDrawingDate", value);
            }
        }
	      
        [XmlAttribute("ThicknessesDate")]
        [Bindable(true)]
        public DateTime? ThicknessesDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ThicknessesDate");
		    }
            set 
		    {
			    SetColumnValue("ThicknessesDate", value);
            }
        }
	      
        [XmlAttribute("TakeoffDate")]
        [Bindable(true)]
        public DateTime? TakeoffDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("TakeoffDate");
		    }
            set 
		    {
			    SetColumnValue("TakeoffDate", value);
            }
        }
	      
        [XmlAttribute("EstimateCompletedDate")]
        [Bindable(true)]
        public DateTime? EstimateCompletedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EstimateCompletedDate");
		    }
            set 
		    {
			    SetColumnValue("EstimateCompletedDate", value);
            }
        }
	      
        [XmlAttribute("EstimateReviewDate")]
        [Bindable(true)]
        public DateTime? EstimateReviewDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EstimateReviewDate");
		    }
            set 
		    {
			    SetColumnValue("EstimateReviewDate", value);
            }
        }
	      
        [XmlAttribute("EstimateSentDate")]
        [Bindable(true)]
        public DateTime? EstimateSentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EstimateSentDate");
		    }
            set 
		    {
			    SetColumnValue("EstimateSentDate", value);
            }
        }
	      
        [XmlAttribute("EstimateTotal")]
        [Bindable(true)]
        public decimal? EstimateTotal 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("EstimateTotal");
		    }
            set 
		    {
			    SetColumnValue("EstimateTotal", value);
            }
        }
	      
        [XmlAttribute("DoorsTotal")]
        [Bindable(true)]
        public decimal? DoorsTotal 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("DoorsTotal");
		    }
            set 
		    {
			    SetColumnValue("DoorsTotal", value);
            }
        }
	      
        [XmlAttribute("InteriorsTotal")]
        [Bindable(true)]
        public decimal? InteriorsTotal 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("InteriorsTotal");
		    }
            set 
		    {
			    SetColumnValue("InteriorsTotal", value);
            }
        }
	      
        [XmlAttribute("BunkerTotal")]
        [Bindable(true)]
        public decimal? BunkerTotal 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("BunkerTotal");
		    }
            set 
		    {
			    SetColumnValue("BunkerTotal", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ProjectName = @"ProjectName";
            
            public static string Name = @"Name";
            
            public static string EstimateNumber = @"EstimateNumber";
            
            public static string Contact = @"Contact";
            
            public static string Received = @"Received";
            
            public static string ResponseRequestedBy = @"ResponseRequestedBy";
            
            public static string Complete = @"Complete";
            
            public static string MoreInfoDate = @"MoreInfoDate";
            
            public static string InitialDrawingDate = @"InitialDrawingDate";
            
            public static string ThicknessesDate = @"ThicknessesDate";
            
            public static string TakeoffDate = @"TakeoffDate";
            
            public static string EstimateCompletedDate = @"EstimateCompletedDate";
            
            public static string EstimateReviewDate = @"EstimateReviewDate";
            
            public static string EstimateSentDate = @"EstimateSentDate";
            
            public static string EstimateTotal = @"EstimateTotal";
            
            public static string DoorsTotal = @"DoorsTotal";
            
            public static string InteriorsTotal = @"InteriorsTotal";
            
            public static string BunkerTotal = @"BunkerTotal";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
