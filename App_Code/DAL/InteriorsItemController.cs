using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL
{
    /// <summary>
    /// Controller class for InteriorsItems
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class InteriorsItemController
    {
        // Preload our schema..
        InteriorsItem thisSchemaLoad = new InteriorsItem();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public InteriorsItemCollection FetchAll()
        {
            InteriorsItemCollection coll = new InteriorsItemCollection();
            Query qry = new Query(InteriorsItem.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public InteriorsItemCollection FetchByID(object Id)
        {
            InteriorsItemCollection coll = new InteriorsItemCollection().Where("ID", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public InteriorsItemCollection FetchByQuery(Query qry)
        {
            InteriorsItemCollection coll = new InteriorsItemCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (InteriorsItem.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (InteriorsItem.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? CategoryID,int? AssemblyID,string Manufacturer,string Make,string ModelNumber,string Description,string Color,decimal? Length,decimal? Width,decimal? Thickness,string Finish,string Unit,decimal? UnitPrice,DateTime? LastPriceUpdate,string LastPriceUpdateBy,bool IsAssembly)
	    {
		    InteriorsItem item = new InteriorsItem();
		    
            item.CategoryID = CategoryID;
            
            item.AssemblyID = AssemblyID;
            
            item.Manufacturer = Manufacturer;
            
            item.Make = Make;
            
            item.ModelNumber = ModelNumber;
            
            item.Description = Description;
            
            item.Color = Color;
            
            item.Length = Length;
            
            item.Width = Width;
            
            item.Thickness = Thickness;
            
            item.Finish = Finish;
            
            item.Unit = Unit;
            
            item.UnitPrice = UnitPrice;
            
            item.LastPriceUpdate = LastPriceUpdate;
            
            item.LastPriceUpdateBy = LastPriceUpdateBy;
            
            item.IsAssembly = IsAssembly;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,int? CategoryID,int? AssemblyID,string Manufacturer,string Make,string ModelNumber,string Description,string Color,decimal? Length,decimal? Width,decimal? Thickness,string Finish,string Unit,decimal? UnitPrice,DateTime? LastPriceUpdate,string LastPriceUpdateBy,bool IsAssembly)
	    {
		    InteriorsItem item = new InteriorsItem();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.CategoryID = CategoryID;
				
			item.AssemblyID = AssemblyID;
				
			item.Manufacturer = Manufacturer;
				
			item.Make = Make;
				
			item.ModelNumber = ModelNumber;
				
			item.Description = Description;
				
			item.Color = Color;
				
			item.Length = Length;
				
			item.Width = Width;
				
			item.Thickness = Thickness;
				
			item.Finish = Finish;
				
			item.Unit = Unit;
				
			item.UnitPrice = UnitPrice;
				
			item.LastPriceUpdate = LastPriceUpdate;
				
			item.LastPriceUpdateBy = LastPriceUpdateBy;
				
			item.IsAssembly = IsAssembly;
				
	        item.Save(UserName);
	    }
    }
}
