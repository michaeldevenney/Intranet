using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DAL
{
	/// <summary>
	/// Strongly-typed collection for the Project class.
	/// </summary>
    [Serializable]
	public partial class ProjectCollection : ActiveList<Project, ProjectCollection>
	{	   
		public ProjectCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>ProjectCollection</returns>
		public ProjectCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                Project o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the A_Projects table.
	/// </summary>
	[Serializable]
	public partial class Project : ActiveRecord<Project>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public Project()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public Project(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public Project(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public Project(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("A_Projects", TableType.Table, DataService.GetInstance("VeritasInfo"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarId = new TableSchema.TableColumn(schema);
				colvarId.ColumnName = "ID";
				colvarId.DataType = DbType.Int32;
				colvarId.MaxLength = 0;
				colvarId.AutoIncrement = true;
				colvarId.IsNullable = false;
				colvarId.IsPrimaryKey = true;
				colvarId.IsForeignKey = false;
				colvarId.IsReadOnly = false;
				colvarId.DefaultSetting = @"";
				colvarId.ForeignKeyTableName = "";
				schema.Columns.Add(colvarId);
				
				TableSchema.TableColumn colvarProjectNumber = new TableSchema.TableColumn(schema);
				colvarProjectNumber.ColumnName = "ProjectNumber";
				colvarProjectNumber.DataType = DbType.AnsiString;
				colvarProjectNumber.MaxLength = 100;
				colvarProjectNumber.AutoIncrement = false;
				colvarProjectNumber.IsNullable = false;
				colvarProjectNumber.IsPrimaryKey = false;
				colvarProjectNumber.IsForeignKey = false;
				colvarProjectNumber.IsReadOnly = false;
				colvarProjectNumber.DefaultSetting = @"";
				colvarProjectNumber.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProjectNumber);
				
				TableSchema.TableColumn colvarProjectName = new TableSchema.TableColumn(schema);
				colvarProjectName.ColumnName = "ProjectName";
				colvarProjectName.DataType = DbType.AnsiString;
				colvarProjectName.MaxLength = 100;
				colvarProjectName.AutoIncrement = false;
				colvarProjectName.IsNullable = false;
				colvarProjectName.IsPrimaryKey = false;
				colvarProjectName.IsForeignKey = false;
				colvarProjectName.IsReadOnly = false;
				colvarProjectName.DefaultSetting = @"";
				colvarProjectName.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProjectName);
				
				TableSchema.TableColumn colvarProjectLead = new TableSchema.TableColumn(schema);
				colvarProjectLead.ColumnName = "ProjectLead";
				colvarProjectLead.DataType = DbType.AnsiString;
				colvarProjectLead.MaxLength = 10;
				colvarProjectLead.AutoIncrement = false;
				colvarProjectLead.IsNullable = true;
				colvarProjectLead.IsPrimaryKey = false;
				colvarProjectLead.IsForeignKey = false;
				colvarProjectLead.IsReadOnly = false;
				colvarProjectLead.DefaultSetting = @"";
				colvarProjectLead.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProjectLead);
				
				TableSchema.TableColumn colvarProjectType = new TableSchema.TableColumn(schema);
				colvarProjectType.ColumnName = "ProjectType";
				colvarProjectType.DataType = DbType.AnsiString;
				colvarProjectType.MaxLength = 25;
				colvarProjectType.AutoIncrement = false;
				colvarProjectType.IsNullable = true;
				colvarProjectType.IsPrimaryKey = false;
				colvarProjectType.IsForeignKey = false;
				colvarProjectType.IsReadOnly = false;
				colvarProjectType.DefaultSetting = @"";
				colvarProjectType.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProjectType);
				
				TableSchema.TableColumn colvarProjectPhase = new TableSchema.TableColumn(schema);
				colvarProjectPhase.ColumnName = "ProjectPhase";
				colvarProjectPhase.DataType = DbType.AnsiString;
				colvarProjectPhase.MaxLength = 15;
				colvarProjectPhase.AutoIncrement = false;
				colvarProjectPhase.IsNullable = true;
				colvarProjectPhase.IsPrimaryKey = false;
				colvarProjectPhase.IsForeignKey = false;
				colvarProjectPhase.IsReadOnly = false;
				colvarProjectPhase.DefaultSetting = @"";
				colvarProjectPhase.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProjectPhase);
				
				TableSchema.TableColumn colvarProjectActivity = new TableSchema.TableColumn(schema);
				colvarProjectActivity.ColumnName = "ProjectActivity";
				colvarProjectActivity.DataType = DbType.AnsiString;
				colvarProjectActivity.MaxLength = 25;
				colvarProjectActivity.AutoIncrement = false;
				colvarProjectActivity.IsNullable = true;
				colvarProjectActivity.IsPrimaryKey = false;
				colvarProjectActivity.IsForeignKey = false;
				colvarProjectActivity.IsReadOnly = false;
				colvarProjectActivity.DefaultSetting = @"";
				colvarProjectActivity.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProjectActivity);
				
				TableSchema.TableColumn colvarLocation = new TableSchema.TableColumn(schema);
				colvarLocation.ColumnName = "Location";
				colvarLocation.DataType = DbType.AnsiString;
				colvarLocation.MaxLength = 50;
				colvarLocation.AutoIncrement = false;
				colvarLocation.IsNullable = true;
				colvarLocation.IsPrimaryKey = false;
				colvarLocation.IsForeignKey = false;
				colvarLocation.IsReadOnly = false;
				colvarLocation.DefaultSetting = @"";
				colvarLocation.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLocation);
				
				TableSchema.TableColumn colvarPMUserID = new TableSchema.TableColumn(schema);
				colvarPMUserID.ColumnName = "PMUserID";
				colvarPMUserID.DataType = DbType.Int32;
				colvarPMUserID.MaxLength = 0;
				colvarPMUserID.AutoIncrement = false;
				colvarPMUserID.IsNullable = true;
				colvarPMUserID.IsPrimaryKey = false;
				colvarPMUserID.IsForeignKey = false;
				colvarPMUserID.IsReadOnly = false;
				colvarPMUserID.DefaultSetting = @"";
				colvarPMUserID.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPMUserID);
				
				TableSchema.TableColumn colvarSalespersonID = new TableSchema.TableColumn(schema);
				colvarSalespersonID.ColumnName = "SalespersonID";
				colvarSalespersonID.DataType = DbType.Int32;
				colvarSalespersonID.MaxLength = 0;
				colvarSalespersonID.AutoIncrement = false;
				colvarSalespersonID.IsNullable = true;
				colvarSalespersonID.IsPrimaryKey = false;
				colvarSalespersonID.IsForeignKey = false;
				colvarSalespersonID.IsReadOnly = false;
				colvarSalespersonID.DefaultSetting = @"";
				colvarSalespersonID.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSalespersonID);
				
				TableSchema.TableColumn colvarPMAssigned = new TableSchema.TableColumn(schema);
				colvarPMAssigned.ColumnName = "PMAssigned";
				colvarPMAssigned.DataType = DbType.AnsiString;
				colvarPMAssigned.MaxLength = 50;
				colvarPMAssigned.AutoIncrement = false;
				colvarPMAssigned.IsNullable = true;
				colvarPMAssigned.IsPrimaryKey = false;
				colvarPMAssigned.IsForeignKey = false;
				colvarPMAssigned.IsReadOnly = false;
				colvarPMAssigned.DefaultSetting = @"";
				colvarPMAssigned.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPMAssigned);
				
				TableSchema.TableColumn colvarDirectoryPath = new TableSchema.TableColumn(schema);
				colvarDirectoryPath.ColumnName = "DirectoryPath";
				colvarDirectoryPath.DataType = DbType.AnsiString;
				colvarDirectoryPath.MaxLength = 256;
				colvarDirectoryPath.AutoIncrement = false;
				colvarDirectoryPath.IsNullable = true;
				colvarDirectoryPath.IsPrimaryKey = false;
				colvarDirectoryPath.IsForeignKey = false;
				colvarDirectoryPath.IsReadOnly = false;
				colvarDirectoryPath.DefaultSetting = @"";
				colvarDirectoryPath.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDirectoryPath);
				
				TableSchema.TableColumn colvarPercentComplete = new TableSchema.TableColumn(schema);
				colvarPercentComplete.ColumnName = "PercentComplete";
				colvarPercentComplete.DataType = DbType.Decimal;
				colvarPercentComplete.MaxLength = 0;
				colvarPercentComplete.AutoIncrement = false;
				colvarPercentComplete.IsNullable = true;
				colvarPercentComplete.IsPrimaryKey = false;
				colvarPercentComplete.IsForeignKey = false;
				colvarPercentComplete.IsReadOnly = false;
				colvarPercentComplete.DefaultSetting = @"";
				colvarPercentComplete.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPercentComplete);
				
				TableSchema.TableColumn colvarShippingPercentage = new TableSchema.TableColumn(schema);
				colvarShippingPercentage.ColumnName = "ShippingPercentage";
				colvarShippingPercentage.DataType = DbType.Decimal;
				colvarShippingPercentage.MaxLength = 0;
				colvarShippingPercentage.AutoIncrement = false;
				colvarShippingPercentage.IsNullable = true;
				colvarShippingPercentage.IsPrimaryKey = false;
				colvarShippingPercentage.IsForeignKey = false;
				colvarShippingPercentage.IsReadOnly = false;
				colvarShippingPercentage.DefaultSetting = @"";
				colvarShippingPercentage.ForeignKeyTableName = "";
				schema.Columns.Add(colvarShippingPercentage);
				
				TableSchema.TableColumn colvarInstallPercentage = new TableSchema.TableColumn(schema);
				colvarInstallPercentage.ColumnName = "InstallPercentage";
				colvarInstallPercentage.DataType = DbType.Decimal;
				colvarInstallPercentage.MaxLength = 0;
				colvarInstallPercentage.AutoIncrement = false;
				colvarInstallPercentage.IsNullable = true;
				colvarInstallPercentage.IsPrimaryKey = false;
				colvarInstallPercentage.IsForeignKey = false;
				colvarInstallPercentage.IsReadOnly = false;
				colvarInstallPercentage.DefaultSetting = @"";
				colvarInstallPercentage.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInstallPercentage);
				
				TableSchema.TableColumn colvarRoomSummary = new TableSchema.TableColumn(schema);
				colvarRoomSummary.ColumnName = "RoomSummary";
				colvarRoomSummary.DataType = DbType.AnsiString;
				colvarRoomSummary.MaxLength = -1;
				colvarRoomSummary.AutoIncrement = false;
				colvarRoomSummary.IsNullable = true;
				colvarRoomSummary.IsPrimaryKey = false;
				colvarRoomSummary.IsForeignKey = false;
				colvarRoomSummary.IsReadOnly = false;
				colvarRoomSummary.DefaultSetting = @"";
				colvarRoomSummary.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRoomSummary);
				
				TableSchema.TableColumn colvarDoorSummary = new TableSchema.TableColumn(schema);
				colvarDoorSummary.ColumnName = "DoorSummary";
				colvarDoorSummary.DataType = DbType.AnsiString;
				colvarDoorSummary.MaxLength = -1;
				colvarDoorSummary.AutoIncrement = false;
				colvarDoorSummary.IsNullable = true;
				colvarDoorSummary.IsPrimaryKey = false;
				colvarDoorSummary.IsForeignKey = false;
				colvarDoorSummary.IsReadOnly = false;
				colvarDoorSummary.DefaultSetting = @"";
				colvarDoorSummary.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDoorSummary);
				
				TableSchema.TableColumn colvarTotalTrucks = new TableSchema.TableColumn(schema);
				colvarTotalTrucks.ColumnName = "TotalTrucks";
				colvarTotalTrucks.DataType = DbType.Int32;
				colvarTotalTrucks.MaxLength = 0;
				colvarTotalTrucks.AutoIncrement = false;
				colvarTotalTrucks.IsNullable = true;
				colvarTotalTrucks.IsPrimaryKey = false;
				colvarTotalTrucks.IsForeignKey = false;
				colvarTotalTrucks.IsReadOnly = false;
				colvarTotalTrucks.DefaultSetting = @"";
				colvarTotalTrucks.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTotalTrucks);
				
				TableSchema.TableColumn colvarTrucksShippedToDate = new TableSchema.TableColumn(schema);
				colvarTrucksShippedToDate.ColumnName = "TrucksShippedToDate";
				colvarTrucksShippedToDate.DataType = DbType.Int32;
				colvarTrucksShippedToDate.MaxLength = 0;
				colvarTrucksShippedToDate.AutoIncrement = false;
				colvarTrucksShippedToDate.IsNullable = true;
				colvarTrucksShippedToDate.IsPrimaryKey = false;
				colvarTrucksShippedToDate.IsForeignKey = false;
				colvarTrucksShippedToDate.IsReadOnly = false;
				colvarTrucksShippedToDate.DefaultSetting = @"";
				colvarTrucksShippedToDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrucksShippedToDate);
				
				TableSchema.TableColumn colvarTrucksRemaining = new TableSchema.TableColumn(schema);
				colvarTrucksRemaining.ColumnName = "TrucksRemaining";
				colvarTrucksRemaining.DataType = DbType.Int32;
				colvarTrucksRemaining.MaxLength = 0;
				colvarTrucksRemaining.AutoIncrement = false;
				colvarTrucksRemaining.IsNullable = true;
				colvarTrucksRemaining.IsPrimaryKey = false;
				colvarTrucksRemaining.IsForeignKey = false;
				colvarTrucksRemaining.IsReadOnly = false;
				colvarTrucksRemaining.DefaultSetting = @"";
				colvarTrucksRemaining.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTrucksRemaining);
				
				TableSchema.TableColumn colvarTakeOffBlockCount = new TableSchema.TableColumn(schema);
				colvarTakeOffBlockCount.ColumnName = "TakeOffBlockCount";
				colvarTakeOffBlockCount.DataType = DbType.Decimal;
				colvarTakeOffBlockCount.MaxLength = 0;
				colvarTakeOffBlockCount.AutoIncrement = false;
				colvarTakeOffBlockCount.IsNullable = true;
				colvarTakeOffBlockCount.IsPrimaryKey = false;
				colvarTakeOffBlockCount.IsForeignKey = false;
				colvarTakeOffBlockCount.IsReadOnly = false;
				colvarTakeOffBlockCount.DefaultSetting = @"";
				colvarTakeOffBlockCount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTakeOffBlockCount);
				
				TableSchema.TableColumn colvarBlocksShippedToDate = new TableSchema.TableColumn(schema);
				colvarBlocksShippedToDate.ColumnName = "BlocksShippedToDate";
				colvarBlocksShippedToDate.DataType = DbType.Decimal;
				colvarBlocksShippedToDate.MaxLength = 0;
				colvarBlocksShippedToDate.AutoIncrement = false;
				colvarBlocksShippedToDate.IsNullable = true;
				colvarBlocksShippedToDate.IsPrimaryKey = false;
				colvarBlocksShippedToDate.IsForeignKey = false;
				colvarBlocksShippedToDate.IsReadOnly = false;
				colvarBlocksShippedToDate.DefaultSetting = @"";
				colvarBlocksShippedToDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBlocksShippedToDate);
				
				TableSchema.TableColumn colvarBlocksInstalledToDate = new TableSchema.TableColumn(schema);
				colvarBlocksInstalledToDate.ColumnName = "BlocksInstalledToDate";
				colvarBlocksInstalledToDate.DataType = DbType.Decimal;
				colvarBlocksInstalledToDate.MaxLength = 0;
				colvarBlocksInstalledToDate.AutoIncrement = false;
				colvarBlocksInstalledToDate.IsNullable = true;
				colvarBlocksInstalledToDate.IsPrimaryKey = false;
				colvarBlocksInstalledToDate.IsForeignKey = false;
				colvarBlocksInstalledToDate.IsReadOnly = false;
				colvarBlocksInstalledToDate.DefaultSetting = @"";
				colvarBlocksInstalledToDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBlocksInstalledToDate);
				
				TableSchema.TableColumn colvarSteelTotal = new TableSchema.TableColumn(schema);
				colvarSteelTotal.ColumnName = "SteelTotal";
				colvarSteelTotal.DataType = DbType.Decimal;
				colvarSteelTotal.MaxLength = 0;
				colvarSteelTotal.AutoIncrement = false;
				colvarSteelTotal.IsNullable = true;
				colvarSteelTotal.IsPrimaryKey = false;
				colvarSteelTotal.IsForeignKey = false;
				colvarSteelTotal.IsReadOnly = false;
				colvarSteelTotal.DefaultSetting = @"";
				colvarSteelTotal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSteelTotal);
				
				TableSchema.TableColumn colvarSteelShipped = new TableSchema.TableColumn(schema);
				colvarSteelShipped.ColumnName = "SteelShipped";
				colvarSteelShipped.DataType = DbType.Decimal;
				colvarSteelShipped.MaxLength = 0;
				colvarSteelShipped.AutoIncrement = false;
				colvarSteelShipped.IsNullable = true;
				colvarSteelShipped.IsPrimaryKey = false;
				colvarSteelShipped.IsForeignKey = false;
				colvarSteelShipped.IsReadOnly = false;
				colvarSteelShipped.DefaultSetting = @"";
				colvarSteelShipped.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSteelShipped);
				
				TableSchema.TableColumn colvarSteelInstalled = new TableSchema.TableColumn(schema);
				colvarSteelInstalled.ColumnName = "SteelInstalled";
				colvarSteelInstalled.DataType = DbType.Decimal;
				colvarSteelInstalled.MaxLength = 0;
				colvarSteelInstalled.AutoIncrement = false;
				colvarSteelInstalled.IsNullable = true;
				colvarSteelInstalled.IsPrimaryKey = false;
				colvarSteelInstalled.IsForeignKey = false;
				colvarSteelInstalled.IsReadOnly = false;
				colvarSteelInstalled.DefaultSetting = @"";
				colvarSteelInstalled.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSteelInstalled);
				
				TableSchema.TableColumn colvarLeadTotal = new TableSchema.TableColumn(schema);
				colvarLeadTotal.ColumnName = "LeadTotal";
				colvarLeadTotal.DataType = DbType.Decimal;
				colvarLeadTotal.MaxLength = 0;
				colvarLeadTotal.AutoIncrement = false;
				colvarLeadTotal.IsNullable = true;
				colvarLeadTotal.IsPrimaryKey = false;
				colvarLeadTotal.IsForeignKey = false;
				colvarLeadTotal.IsReadOnly = false;
				colvarLeadTotal.DefaultSetting = @"";
				colvarLeadTotal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLeadTotal);
				
				TableSchema.TableColumn colvarLeadShipped = new TableSchema.TableColumn(schema);
				colvarLeadShipped.ColumnName = "LeadShipped";
				colvarLeadShipped.DataType = DbType.Decimal;
				colvarLeadShipped.MaxLength = 0;
				colvarLeadShipped.AutoIncrement = false;
				colvarLeadShipped.IsNullable = true;
				colvarLeadShipped.IsPrimaryKey = false;
				colvarLeadShipped.IsForeignKey = false;
				colvarLeadShipped.IsReadOnly = false;
				colvarLeadShipped.DefaultSetting = @"";
				colvarLeadShipped.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLeadShipped);
				
				TableSchema.TableColumn colvarLeadInstalled = new TableSchema.TableColumn(schema);
				colvarLeadInstalled.ColumnName = "LeadInstalled";
				colvarLeadInstalled.DataType = DbType.Decimal;
				colvarLeadInstalled.MaxLength = 0;
				colvarLeadInstalled.AutoIncrement = false;
				colvarLeadInstalled.IsNullable = true;
				colvarLeadInstalled.IsPrimaryKey = false;
				colvarLeadInstalled.IsForeignKey = false;
				colvarLeadInstalled.IsReadOnly = false;
				colvarLeadInstalled.DefaultSetting = @"";
				colvarLeadInstalled.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLeadInstalled);
				
				TableSchema.TableColumn colvarBearingPlateCompletion = new TableSchema.TableColumn(schema);
				colvarBearingPlateCompletion.ColumnName = "BearingPlateCompletion";
				colvarBearingPlateCompletion.DataType = DbType.DateTime;
				colvarBearingPlateCompletion.MaxLength = 0;
				colvarBearingPlateCompletion.AutoIncrement = false;
				colvarBearingPlateCompletion.IsNullable = true;
				colvarBearingPlateCompletion.IsPrimaryKey = false;
				colvarBearingPlateCompletion.IsForeignKey = false;
				colvarBearingPlateCompletion.IsReadOnly = false;
				colvarBearingPlateCompletion.DefaultSetting = @"";
				colvarBearingPlateCompletion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBearingPlateCompletion);
				
				TableSchema.TableColumn colvarSteelSetDate = new TableSchema.TableColumn(schema);
				colvarSteelSetDate.ColumnName = "SteelSetDate";
				colvarSteelSetDate.DataType = DbType.DateTime;
				colvarSteelSetDate.MaxLength = 0;
				colvarSteelSetDate.AutoIncrement = false;
				colvarSteelSetDate.IsNullable = true;
				colvarSteelSetDate.IsPrimaryKey = false;
				colvarSteelSetDate.IsForeignKey = false;
				colvarSteelSetDate.IsReadOnly = false;
				colvarSteelSetDate.DefaultSetting = @"";
				colvarSteelSetDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSteelSetDate);
				
				TableSchema.TableColumn colvarAvgNumberOfWorkers = new TableSchema.TableColumn(schema);
				colvarAvgNumberOfWorkers.ColumnName = "AvgNumberOfWorkers";
				colvarAvgNumberOfWorkers.DataType = DbType.Decimal;
				colvarAvgNumberOfWorkers.MaxLength = 0;
				colvarAvgNumberOfWorkers.AutoIncrement = false;
				colvarAvgNumberOfWorkers.IsNullable = true;
				colvarAvgNumberOfWorkers.IsPrimaryKey = false;
				colvarAvgNumberOfWorkers.IsForeignKey = false;
				colvarAvgNumberOfWorkers.IsReadOnly = false;
				colvarAvgNumberOfWorkers.DefaultSetting = @"";
				colvarAvgNumberOfWorkers.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAvgNumberOfWorkers);
				
				TableSchema.TableColumn colvarQAStatus = new TableSchema.TableColumn(schema);
				colvarQAStatus.ColumnName = "QAStatus";
				colvarQAStatus.DataType = DbType.AnsiString;
				colvarQAStatus.MaxLength = -1;
				colvarQAStatus.AutoIncrement = false;
				colvarQAStatus.IsNullable = true;
				colvarQAStatus.IsPrimaryKey = false;
				colvarQAStatus.IsForeignKey = false;
				colvarQAStatus.IsReadOnly = false;
				colvarQAStatus.DefaultSetting = @"";
				colvarQAStatus.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQAStatus);
				
				TableSchema.TableColumn colvarProjectStartDate = new TableSchema.TableColumn(schema);
				colvarProjectStartDate.ColumnName = "ProjectStartDate";
				colvarProjectStartDate.DataType = DbType.DateTime;
				colvarProjectStartDate.MaxLength = 0;
				colvarProjectStartDate.AutoIncrement = false;
				colvarProjectStartDate.IsNullable = true;
				colvarProjectStartDate.IsPrimaryKey = false;
				colvarProjectStartDate.IsForeignKey = false;
				colvarProjectStartDate.IsReadOnly = false;
				colvarProjectStartDate.DefaultSetting = @"";
				colvarProjectStartDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProjectStartDate);
				
				TableSchema.TableColumn colvarDoorFrameInstallDate = new TableSchema.TableColumn(schema);
				colvarDoorFrameInstallDate.ColumnName = "DoorFrameInstallDate";
				colvarDoorFrameInstallDate.DataType = DbType.DateTime;
				colvarDoorFrameInstallDate.MaxLength = 0;
				colvarDoorFrameInstallDate.AutoIncrement = false;
				colvarDoorFrameInstallDate.IsNullable = true;
				colvarDoorFrameInstallDate.IsPrimaryKey = false;
				colvarDoorFrameInstallDate.IsForeignKey = false;
				colvarDoorFrameInstallDate.IsReadOnly = false;
				colvarDoorFrameInstallDate.DefaultSetting = @"";
				colvarDoorFrameInstallDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDoorFrameInstallDate);
				
				TableSchema.TableColumn colvarDoorInstallDate = new TableSchema.TableColumn(schema);
				colvarDoorInstallDate.ColumnName = "DoorInstallDate";
				colvarDoorInstallDate.DataType = DbType.DateTime;
				colvarDoorInstallDate.MaxLength = 0;
				colvarDoorInstallDate.AutoIncrement = false;
				colvarDoorInstallDate.IsNullable = true;
				colvarDoorInstallDate.IsPrimaryKey = false;
				colvarDoorInstallDate.IsForeignKey = false;
				colvarDoorInstallDate.IsReadOnly = false;
				colvarDoorInstallDate.DefaultSetting = @"";
				colvarDoorInstallDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDoorInstallDate);
				
				TableSchema.TableColumn colvarQualityOfWork = new TableSchema.TableColumn(schema);
				colvarQualityOfWork.ColumnName = "QualityOfWork";
				colvarQualityOfWork.DataType = DbType.AnsiString;
				colvarQualityOfWork.MaxLength = -1;
				colvarQualityOfWork.AutoIncrement = false;
				colvarQualityOfWork.IsNullable = true;
				colvarQualityOfWork.IsPrimaryKey = false;
				colvarQualityOfWork.IsForeignKey = false;
				colvarQualityOfWork.IsReadOnly = false;
				colvarQualityOfWork.DefaultSetting = @"";
				colvarQualityOfWork.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQualityOfWork);
				
				TableSchema.TableColumn colvarCoordinatedItemsOpen = new TableSchema.TableColumn(schema);
				colvarCoordinatedItemsOpen.ColumnName = "CoordinatedItemsOpen";
				colvarCoordinatedItemsOpen.DataType = DbType.AnsiString;
				colvarCoordinatedItemsOpen.MaxLength = -1;
				colvarCoordinatedItemsOpen.AutoIncrement = false;
				colvarCoordinatedItemsOpen.IsNullable = true;
				colvarCoordinatedItemsOpen.IsPrimaryKey = false;
				colvarCoordinatedItemsOpen.IsForeignKey = false;
				colvarCoordinatedItemsOpen.IsReadOnly = false;
				colvarCoordinatedItemsOpen.DefaultSetting = @"";
				colvarCoordinatedItemsOpen.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCoordinatedItemsOpen);
				
				TableSchema.TableColumn colvarProspectusDate = new TableSchema.TableColumn(schema);
				colvarProspectusDate.ColumnName = "ProspectusDate";
				colvarProspectusDate.DataType = DbType.DateTime;
				colvarProspectusDate.MaxLength = 0;
				colvarProspectusDate.AutoIncrement = false;
				colvarProspectusDate.IsNullable = true;
				colvarProspectusDate.IsPrimaryKey = false;
				colvarProspectusDate.IsForeignKey = false;
				colvarProspectusDate.IsReadOnly = false;
				colvarProspectusDate.DefaultSetting = @"";
				colvarProspectusDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarProspectusDate);
				
				TableSchema.TableColumn colvarLeadShieldingShipDate = new TableSchema.TableColumn(schema);
				colvarLeadShieldingShipDate.ColumnName = "LeadShieldingShipDate";
				colvarLeadShieldingShipDate.DataType = DbType.DateTime;
				colvarLeadShieldingShipDate.MaxLength = 0;
				colvarLeadShieldingShipDate.AutoIncrement = false;
				colvarLeadShieldingShipDate.IsNullable = true;
				colvarLeadShieldingShipDate.IsPrimaryKey = false;
				colvarLeadShieldingShipDate.IsForeignKey = false;
				colvarLeadShieldingShipDate.IsReadOnly = false;
				colvarLeadShieldingShipDate.DefaultSetting = @"";
				colvarLeadShieldingShipDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLeadShieldingShipDate);
				
				TableSchema.TableColumn colvarLeadShieldingInstallDate = new TableSchema.TableColumn(schema);
				colvarLeadShieldingInstallDate.ColumnName = "LeadShieldingInstallDate";
				colvarLeadShieldingInstallDate.DataType = DbType.DateTime;
				colvarLeadShieldingInstallDate.MaxLength = 0;
				colvarLeadShieldingInstallDate.AutoIncrement = false;
				colvarLeadShieldingInstallDate.IsNullable = true;
				colvarLeadShieldingInstallDate.IsPrimaryKey = false;
				colvarLeadShieldingInstallDate.IsForeignKey = false;
				colvarLeadShieldingInstallDate.IsReadOnly = false;
				colvarLeadShieldingInstallDate.DefaultSetting = @"";
				colvarLeadShieldingInstallDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLeadShieldingInstallDate);
				
				TableSchema.TableColumn colvarSteelShieldingOrderDate = new TableSchema.TableColumn(schema);
				colvarSteelShieldingOrderDate.ColumnName = "SteelShieldingOrderDate";
				colvarSteelShieldingOrderDate.DataType = DbType.DateTime;
				colvarSteelShieldingOrderDate.MaxLength = 0;
				colvarSteelShieldingOrderDate.AutoIncrement = false;
				colvarSteelShieldingOrderDate.IsNullable = true;
				colvarSteelShieldingOrderDate.IsPrimaryKey = false;
				colvarSteelShieldingOrderDate.IsForeignKey = false;
				colvarSteelShieldingOrderDate.IsReadOnly = false;
				colvarSteelShieldingOrderDate.DefaultSetting = @"";
				colvarSteelShieldingOrderDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSteelShieldingOrderDate);
				
				TableSchema.TableColumn colvarSteelShieldingShipDate = new TableSchema.TableColumn(schema);
				colvarSteelShieldingShipDate.ColumnName = "SteelShieldingShipDate";
				colvarSteelShieldingShipDate.DataType = DbType.DateTime;
				colvarSteelShieldingShipDate.MaxLength = 0;
				colvarSteelShieldingShipDate.AutoIncrement = false;
				colvarSteelShieldingShipDate.IsNullable = true;
				colvarSteelShieldingShipDate.IsPrimaryKey = false;
				colvarSteelShieldingShipDate.IsForeignKey = false;
				colvarSteelShieldingShipDate.IsReadOnly = false;
				colvarSteelShieldingShipDate.DefaultSetting = @"";
				colvarSteelShieldingShipDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSteelShieldingShipDate);
				
				TableSchema.TableColumn colvarSteelShieldingInstallDate = new TableSchema.TableColumn(schema);
				colvarSteelShieldingInstallDate.ColumnName = "SteelShieldingInstallDate";
				colvarSteelShieldingInstallDate.DataType = DbType.DateTime;
				colvarSteelShieldingInstallDate.MaxLength = 0;
				colvarSteelShieldingInstallDate.AutoIncrement = false;
				colvarSteelShieldingInstallDate.IsNullable = true;
				colvarSteelShieldingInstallDate.IsPrimaryKey = false;
				colvarSteelShieldingInstallDate.IsForeignKey = false;
				colvarSteelShieldingInstallDate.IsReadOnly = false;
				colvarSteelShieldingInstallDate.DefaultSetting = @"";
				colvarSteelShieldingInstallDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSteelShieldingInstallDate);
				
				TableSchema.TableColumn colvarLeadShieldingOrderDate = new TableSchema.TableColumn(schema);
				colvarLeadShieldingOrderDate.ColumnName = "LeadShieldingOrderDate";
				colvarLeadShieldingOrderDate.DataType = DbType.DateTime;
				colvarLeadShieldingOrderDate.MaxLength = 0;
				colvarLeadShieldingOrderDate.AutoIncrement = false;
				colvarLeadShieldingOrderDate.IsNullable = true;
				colvarLeadShieldingOrderDate.IsPrimaryKey = false;
				colvarLeadShieldingOrderDate.IsForeignKey = false;
				colvarLeadShieldingOrderDate.IsReadOnly = false;
				colvarLeadShieldingOrderDate.DefaultSetting = @"";
				colvarLeadShieldingOrderDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLeadShieldingOrderDate);
				
				TableSchema.TableColumn colvarQAInspections = new TableSchema.TableColumn(schema);
				colvarQAInspections.ColumnName = "QAInspections";
				colvarQAInspections.DataType = DbType.Int32;
				colvarQAInspections.MaxLength = 0;
				colvarQAInspections.AutoIncrement = false;
				colvarQAInspections.IsNullable = true;
				colvarQAInspections.IsPrimaryKey = false;
				colvarQAInspections.IsForeignKey = false;
				colvarQAInspections.IsReadOnly = false;
				colvarQAInspections.DefaultSetting = @"";
				colvarQAInspections.ForeignKeyTableName = "";
				schema.Columns.Add(colvarQAInspections);
				
				TableSchema.TableColumn colvarNumberOfRooms = new TableSchema.TableColumn(schema);
				colvarNumberOfRooms.ColumnName = "NumberOfRooms";
				colvarNumberOfRooms.DataType = DbType.Int32;
				colvarNumberOfRooms.MaxLength = 0;
				colvarNumberOfRooms.AutoIncrement = false;
				colvarNumberOfRooms.IsNullable = true;
				colvarNumberOfRooms.IsPrimaryKey = false;
				colvarNumberOfRooms.IsForeignKey = false;
				colvarNumberOfRooms.IsReadOnly = false;
				colvarNumberOfRooms.DefaultSetting = @"";
				colvarNumberOfRooms.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNumberOfRooms);
				
				TableSchema.TableColumn colvarInitialTakeOffDate = new TableSchema.TableColumn(schema);
				colvarInitialTakeOffDate.ColumnName = "InitialTakeOffDate";
				colvarInitialTakeOffDate.DataType = DbType.DateTime;
				colvarInitialTakeOffDate.MaxLength = 0;
				colvarInitialTakeOffDate.AutoIncrement = false;
				colvarInitialTakeOffDate.IsNullable = true;
				colvarInitialTakeOffDate.IsPrimaryKey = false;
				colvarInitialTakeOffDate.IsForeignKey = false;
				colvarInitialTakeOffDate.IsReadOnly = false;
				colvarInitialTakeOffDate.DefaultSetting = @"";
				colvarInitialTakeOffDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInitialTakeOffDate);
				
				TableSchema.TableColumn colvarInitialTakeOffAmount = new TableSchema.TableColumn(schema);
				colvarInitialTakeOffAmount.ColumnName = "InitialTakeOffAmount";
				colvarInitialTakeOffAmount.DataType = DbType.Currency;
				colvarInitialTakeOffAmount.MaxLength = 0;
				colvarInitialTakeOffAmount.AutoIncrement = false;
				colvarInitialTakeOffAmount.IsNullable = true;
				colvarInitialTakeOffAmount.IsPrimaryKey = false;
				colvarInitialTakeOffAmount.IsForeignKey = false;
				colvarInitialTakeOffAmount.IsReadOnly = false;
				colvarInitialTakeOffAmount.DefaultSetting = @"";
				colvarInitialTakeOffAmount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInitialTakeOffAmount);
				
				TableSchema.TableColumn colvarInitialProposalDate = new TableSchema.TableColumn(schema);
				colvarInitialProposalDate.ColumnName = "InitialProposalDate";
				colvarInitialProposalDate.DataType = DbType.DateTime;
				colvarInitialProposalDate.MaxLength = 0;
				colvarInitialProposalDate.AutoIncrement = false;
				colvarInitialProposalDate.IsNullable = true;
				colvarInitialProposalDate.IsPrimaryKey = false;
				colvarInitialProposalDate.IsForeignKey = false;
				colvarInitialProposalDate.IsReadOnly = false;
				colvarInitialProposalDate.DefaultSetting = @"";
				colvarInitialProposalDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInitialProposalDate);
				
				TableSchema.TableColumn colvarInitialProposalAmount = new TableSchema.TableColumn(schema);
				colvarInitialProposalAmount.ColumnName = "InitialProposalAmount";
				colvarInitialProposalAmount.DataType = DbType.Currency;
				colvarInitialProposalAmount.MaxLength = 0;
				colvarInitialProposalAmount.AutoIncrement = false;
				colvarInitialProposalAmount.IsNullable = true;
				colvarInitialProposalAmount.IsPrimaryKey = false;
				colvarInitialProposalAmount.IsForeignKey = false;
				colvarInitialProposalAmount.IsReadOnly = false;
				colvarInitialProposalAmount.DefaultSetting = @"";
				colvarInitialProposalAmount.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInitialProposalAmount);
				
				TableSchema.TableColumn colvarContractSentDate = new TableSchema.TableColumn(schema);
				colvarContractSentDate.ColumnName = "ContractSentDate";
				colvarContractSentDate.DataType = DbType.DateTime;
				colvarContractSentDate.MaxLength = 0;
				colvarContractSentDate.AutoIncrement = false;
				colvarContractSentDate.IsNullable = true;
				colvarContractSentDate.IsPrimaryKey = false;
				colvarContractSentDate.IsForeignKey = false;
				colvarContractSentDate.IsReadOnly = false;
				colvarContractSentDate.DefaultSetting = @"";
				colvarContractSentDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarContractSentDate);
				
				TableSchema.TableColumn colvarContractSignedDate = new TableSchema.TableColumn(schema);
				colvarContractSignedDate.ColumnName = "ContractSignedDate";
				colvarContractSignedDate.DataType = DbType.DateTime;
				colvarContractSignedDate.MaxLength = 0;
				colvarContractSignedDate.AutoIncrement = false;
				colvarContractSignedDate.IsNullable = true;
				colvarContractSignedDate.IsPrimaryKey = false;
				colvarContractSignedDate.IsForeignKey = false;
				colvarContractSignedDate.IsReadOnly = false;
				colvarContractSignedDate.DefaultSetting = @"";
				colvarContractSignedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarContractSignedDate);
				
				TableSchema.TableColumn colvarAuthorizationToProceedDate = new TableSchema.TableColumn(schema);
				colvarAuthorizationToProceedDate.ColumnName = "AuthorizationToProceedDate";
				colvarAuthorizationToProceedDate.DataType = DbType.DateTime;
				colvarAuthorizationToProceedDate.MaxLength = 0;
				colvarAuthorizationToProceedDate.AutoIncrement = false;
				colvarAuthorizationToProceedDate.IsNullable = true;
				colvarAuthorizationToProceedDate.IsPrimaryKey = false;
				colvarAuthorizationToProceedDate.IsForeignKey = false;
				colvarAuthorizationToProceedDate.IsReadOnly = false;
				colvarAuthorizationToProceedDate.DefaultSetting = @"";
				colvarAuthorizationToProceedDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAuthorizationToProceedDate);
				
				TableSchema.TableColumn colvarInstallStartDate = new TableSchema.TableColumn(schema);
				colvarInstallStartDate.ColumnName = "InstallStartDate";
				colvarInstallStartDate.DataType = DbType.DateTime;
				colvarInstallStartDate.MaxLength = 0;
				colvarInstallStartDate.AutoIncrement = false;
				colvarInstallStartDate.IsNullable = true;
				colvarInstallStartDate.IsPrimaryKey = false;
				colvarInstallStartDate.IsForeignKey = false;
				colvarInstallStartDate.IsReadOnly = false;
				colvarInstallStartDate.DefaultSetting = @"";
				colvarInstallStartDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInstallStartDate);
				
				TableSchema.TableColumn colvarInstallCompleteDate = new TableSchema.TableColumn(schema);
				colvarInstallCompleteDate.ColumnName = "InstallCompleteDate";
				colvarInstallCompleteDate.DataType = DbType.DateTime;
				colvarInstallCompleteDate.MaxLength = 0;
				colvarInstallCompleteDate.AutoIncrement = false;
				colvarInstallCompleteDate.IsNullable = true;
				colvarInstallCompleteDate.IsPrimaryKey = false;
				colvarInstallCompleteDate.IsForeignKey = false;
				colvarInstallCompleteDate.IsReadOnly = false;
				colvarInstallCompleteDate.DefaultSetting = @"";
				colvarInstallCompleteDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInstallCompleteDate);
				
				TableSchema.TableColumn colvarShippingStartDate = new TableSchema.TableColumn(schema);
				colvarShippingStartDate.ColumnName = "ShippingStartDate";
				colvarShippingStartDate.DataType = DbType.DateTime;
				colvarShippingStartDate.MaxLength = 0;
				colvarShippingStartDate.AutoIncrement = false;
				colvarShippingStartDate.IsNullable = true;
				colvarShippingStartDate.IsPrimaryKey = false;
				colvarShippingStartDate.IsForeignKey = false;
				colvarShippingStartDate.IsReadOnly = false;
				colvarShippingStartDate.DefaultSetting = @"";
				colvarShippingStartDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarShippingStartDate);
				
				TableSchema.TableColumn colvarShippingCompleteDate = new TableSchema.TableColumn(schema);
				colvarShippingCompleteDate.ColumnName = "ShippingCompleteDate";
				colvarShippingCompleteDate.DataType = DbType.DateTime;
				colvarShippingCompleteDate.MaxLength = 0;
				colvarShippingCompleteDate.AutoIncrement = false;
				colvarShippingCompleteDate.IsNullable = true;
				colvarShippingCompleteDate.IsPrimaryKey = false;
				colvarShippingCompleteDate.IsForeignKey = false;
				colvarShippingCompleteDate.IsReadOnly = false;
				colvarShippingCompleteDate.DefaultSetting = @"";
				colvarShippingCompleteDate.ForeignKeyTableName = "";
				schema.Columns.Add(colvarShippingCompleteDate);
				
				TableSchema.TableColumn colvarFirstTruckOutFleetwood = new TableSchema.TableColumn(schema);
				colvarFirstTruckOutFleetwood.ColumnName = "FirstTruckOutFleetwood";
				colvarFirstTruckOutFleetwood.DataType = DbType.DateTime;
				colvarFirstTruckOutFleetwood.MaxLength = 0;
				colvarFirstTruckOutFleetwood.AutoIncrement = false;
				colvarFirstTruckOutFleetwood.IsNullable = true;
				colvarFirstTruckOutFleetwood.IsPrimaryKey = false;
				colvarFirstTruckOutFleetwood.IsForeignKey = false;
				colvarFirstTruckOutFleetwood.IsReadOnly = false;
				colvarFirstTruckOutFleetwood.DefaultSetting = @"";
				colvarFirstTruckOutFleetwood.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFirstTruckOutFleetwood);
				
				TableSchema.TableColumn colvarFirstTruckOnsite = new TableSchema.TableColumn(schema);
				colvarFirstTruckOnsite.ColumnName = "FirstTruckOnsite";
				colvarFirstTruckOnsite.DataType = DbType.DateTime;
				colvarFirstTruckOnsite.MaxLength = 0;
				colvarFirstTruckOnsite.AutoIncrement = false;
				colvarFirstTruckOnsite.IsNullable = true;
				colvarFirstTruckOnsite.IsPrimaryKey = false;
				colvarFirstTruckOnsite.IsForeignKey = false;
				colvarFirstTruckOnsite.IsReadOnly = false;
				colvarFirstTruckOnsite.DefaultSetting = @"";
				colvarFirstTruckOnsite.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFirstTruckOnsite);
				
				TableSchema.TableColumn colvarLastTruckOutFleetwood = new TableSchema.TableColumn(schema);
				colvarLastTruckOutFleetwood.ColumnName = "LastTruckOutFleetwood";
				colvarLastTruckOutFleetwood.DataType = DbType.DateTime;
				colvarLastTruckOutFleetwood.MaxLength = 0;
				colvarLastTruckOutFleetwood.AutoIncrement = false;
				colvarLastTruckOutFleetwood.IsNullable = true;
				colvarLastTruckOutFleetwood.IsPrimaryKey = false;
				colvarLastTruckOutFleetwood.IsForeignKey = false;
				colvarLastTruckOutFleetwood.IsReadOnly = false;
				colvarLastTruckOutFleetwood.DefaultSetting = @"";
				colvarLastTruckOutFleetwood.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLastTruckOutFleetwood);
				
				TableSchema.TableColumn colvarLastTruckOnsite = new TableSchema.TableColumn(schema);
				colvarLastTruckOnsite.ColumnName = "LastTruckOnsite";
				colvarLastTruckOnsite.DataType = DbType.DateTime;
				colvarLastTruckOnsite.MaxLength = 0;
				colvarLastTruckOnsite.AutoIncrement = false;
				colvarLastTruckOnsite.IsNullable = true;
				colvarLastTruckOnsite.IsPrimaryKey = false;
				colvarLastTruckOnsite.IsForeignKey = false;
				colvarLastTruckOnsite.IsReadOnly = false;
				colvarLastTruckOnsite.DefaultSetting = @"";
				colvarLastTruckOnsite.ForeignKeyTableName = "";
				schema.Columns.Add(colvarLastTruckOnsite);
				
				TableSchema.TableColumn colvarCreated = new TableSchema.TableColumn(schema);
				colvarCreated.ColumnName = "Created";
				colvarCreated.DataType = DbType.DateTime;
				colvarCreated.MaxLength = 0;
				colvarCreated.AutoIncrement = false;
				colvarCreated.IsNullable = true;
				colvarCreated.IsPrimaryKey = false;
				colvarCreated.IsForeignKey = false;
				colvarCreated.IsReadOnly = false;
				colvarCreated.DefaultSetting = @"";
				colvarCreated.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreated);
				
				TableSchema.TableColumn colvarWallDiagramFile = new TableSchema.TableColumn(schema);
				colvarWallDiagramFile.ColumnName = "WallDiagramFile";
				colvarWallDiagramFile.DataType = DbType.AnsiString;
				colvarWallDiagramFile.MaxLength = 100;
				colvarWallDiagramFile.AutoIncrement = false;
				colvarWallDiagramFile.IsNullable = true;
				colvarWallDiagramFile.IsPrimaryKey = false;
				colvarWallDiagramFile.IsForeignKey = false;
				colvarWallDiagramFile.IsReadOnly = false;
				colvarWallDiagramFile.DefaultSetting = @"";
				colvarWallDiagramFile.ForeignKeyTableName = "";
				schema.Columns.Add(colvarWallDiagramFile);
				
				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
				colvarCreatedBy.ColumnName = "CreatedBy";
				colvarCreatedBy.DataType = DbType.AnsiString;
				colvarCreatedBy.MaxLength = 50;
				colvarCreatedBy.AutoIncrement = false;
				colvarCreatedBy.IsNullable = true;
				colvarCreatedBy.IsPrimaryKey = false;
				colvarCreatedBy.IsForeignKey = false;
				colvarCreatedBy.IsReadOnly = false;
				colvarCreatedBy.DefaultSetting = @"";
				colvarCreatedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedBy);
				
				TableSchema.TableColumn colvarUpdatedBy = new TableSchema.TableColumn(schema);
				colvarUpdatedBy.ColumnName = "UpdatedBy";
				colvarUpdatedBy.DataType = DbType.AnsiString;
				colvarUpdatedBy.MaxLength = 50;
				colvarUpdatedBy.AutoIncrement = false;
				colvarUpdatedBy.IsNullable = true;
				colvarUpdatedBy.IsPrimaryKey = false;
				colvarUpdatedBy.IsForeignKey = false;
				colvarUpdatedBy.IsReadOnly = false;
				colvarUpdatedBy.DefaultSetting = @"";
				colvarUpdatedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUpdatedBy);
				
				TableSchema.TableColumn colvarUpdated = new TableSchema.TableColumn(schema);
				colvarUpdated.ColumnName = "Updated";
				colvarUpdated.DataType = DbType.DateTime;
				colvarUpdated.MaxLength = 0;
				colvarUpdated.AutoIncrement = false;
				colvarUpdated.IsNullable = true;
				colvarUpdated.IsPrimaryKey = false;
				colvarUpdated.IsForeignKey = false;
				colvarUpdated.IsReadOnly = false;
				colvarUpdated.DefaultSetting = @"";
				colvarUpdated.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUpdated);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["VeritasInfo"].AddSchema("A_Projects",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Id")]
		[Bindable(true)]
		public int Id 
		{
			get { return GetColumnValue<int>(Columns.Id); }
			set { SetColumnValue(Columns.Id, value); }
		}
		  
		[XmlAttribute("ProjectNumber")]
		[Bindable(true)]
		public string ProjectNumber 
		{
			get { return GetColumnValue<string>(Columns.ProjectNumber); }
			set { SetColumnValue(Columns.ProjectNumber, value); }
		}
		  
		[XmlAttribute("ProjectName")]
		[Bindable(true)]
		public string ProjectName 
		{
			get { return GetColumnValue<string>(Columns.ProjectName); }
			set { SetColumnValue(Columns.ProjectName, value); }
		}
		  
		[XmlAttribute("ProjectLead")]
		[Bindable(true)]
		public string ProjectLead 
		{
			get { return GetColumnValue<string>(Columns.ProjectLead); }
			set { SetColumnValue(Columns.ProjectLead, value); }
		}
		  
		[XmlAttribute("ProjectType")]
		[Bindable(true)]
		public string ProjectType 
		{
			get { return GetColumnValue<string>(Columns.ProjectType); }
			set { SetColumnValue(Columns.ProjectType, value); }
		}
		  
		[XmlAttribute("ProjectPhase")]
		[Bindable(true)]
		public string ProjectPhase 
		{
			get { return GetColumnValue<string>(Columns.ProjectPhase); }
			set { SetColumnValue(Columns.ProjectPhase, value); }
		}
		  
		[XmlAttribute("ProjectActivity")]
		[Bindable(true)]
		public string ProjectActivity 
		{
			get { return GetColumnValue<string>(Columns.ProjectActivity); }
			set { SetColumnValue(Columns.ProjectActivity, value); }
		}
		  
		[XmlAttribute("Location")]
		[Bindable(true)]
		public string Location 
		{
			get { return GetColumnValue<string>(Columns.Location); }
			set { SetColumnValue(Columns.Location, value); }
		}
		  
		[XmlAttribute("PMUserID")]
		[Bindable(true)]
		public int? PMUserID 
		{
			get { return GetColumnValue<int?>(Columns.PMUserID); }
			set { SetColumnValue(Columns.PMUserID, value); }
		}
		  
		[XmlAttribute("SalespersonID")]
		[Bindable(true)]
		public int? SalespersonID 
		{
			get { return GetColumnValue<int?>(Columns.SalespersonID); }
			set { SetColumnValue(Columns.SalespersonID, value); }
		}
		  
		[XmlAttribute("PMAssigned")]
		[Bindable(true)]
		public string PMAssigned 
		{
			get { return GetColumnValue<string>(Columns.PMAssigned); }
			set { SetColumnValue(Columns.PMAssigned, value); }
		}
		  
		[XmlAttribute("DirectoryPath")]
		[Bindable(true)]
		public string DirectoryPath 
		{
			get { return GetColumnValue<string>(Columns.DirectoryPath); }
			set { SetColumnValue(Columns.DirectoryPath, value); }
		}
		  
		[XmlAttribute("PercentComplete")]
		[Bindable(true)]
		public decimal? PercentComplete 
		{
			get { return GetColumnValue<decimal?>(Columns.PercentComplete); }
			set { SetColumnValue(Columns.PercentComplete, value); }
		}
		  
		[XmlAttribute("ShippingPercentage")]
		[Bindable(true)]
		public decimal? ShippingPercentage 
		{
			get { return GetColumnValue<decimal?>(Columns.ShippingPercentage); }
			set { SetColumnValue(Columns.ShippingPercentage, value); }
		}
		  
		[XmlAttribute("InstallPercentage")]
		[Bindable(true)]
		public decimal? InstallPercentage 
		{
			get { return GetColumnValue<decimal?>(Columns.InstallPercentage); }
			set { SetColumnValue(Columns.InstallPercentage, value); }
		}
		  
		[XmlAttribute("RoomSummary")]
		[Bindable(true)]
		public string RoomSummary 
		{
			get { return GetColumnValue<string>(Columns.RoomSummary); }
			set { SetColumnValue(Columns.RoomSummary, value); }
		}
		  
		[XmlAttribute("DoorSummary")]
		[Bindable(true)]
		public string DoorSummary 
		{
			get { return GetColumnValue<string>(Columns.DoorSummary); }
			set { SetColumnValue(Columns.DoorSummary, value); }
		}
		  
		[XmlAttribute("TotalTrucks")]
		[Bindable(true)]
		public int? TotalTrucks 
		{
			get { return GetColumnValue<int?>(Columns.TotalTrucks); }
			set { SetColumnValue(Columns.TotalTrucks, value); }
		}
		  
		[XmlAttribute("TrucksShippedToDate")]
		[Bindable(true)]
		public int? TrucksShippedToDate 
		{
			get { return GetColumnValue<int?>(Columns.TrucksShippedToDate); }
			set { SetColumnValue(Columns.TrucksShippedToDate, value); }
		}
		  
		[XmlAttribute("TrucksRemaining")]
		[Bindable(true)]
		public int? TrucksRemaining 
		{
			get { return GetColumnValue<int?>(Columns.TrucksRemaining); }
			set { SetColumnValue(Columns.TrucksRemaining, value); }
		}
		  
		[XmlAttribute("TakeOffBlockCount")]
		[Bindable(true)]
		public decimal? TakeOffBlockCount 
		{
			get { return GetColumnValue<decimal?>(Columns.TakeOffBlockCount); }
			set { SetColumnValue(Columns.TakeOffBlockCount, value); }
		}
		  
		[XmlAttribute("BlocksShippedToDate")]
		[Bindable(true)]
		public decimal? BlocksShippedToDate 
		{
			get { return GetColumnValue<decimal?>(Columns.BlocksShippedToDate); }
			set { SetColumnValue(Columns.BlocksShippedToDate, value); }
		}
		  
		[XmlAttribute("BlocksInstalledToDate")]
		[Bindable(true)]
		public decimal? BlocksInstalledToDate 
		{
			get { return GetColumnValue<decimal?>(Columns.BlocksInstalledToDate); }
			set { SetColumnValue(Columns.BlocksInstalledToDate, value); }
		}
		  
		[XmlAttribute("SteelTotal")]
		[Bindable(true)]
		public decimal? SteelTotal 
		{
			get { return GetColumnValue<decimal?>(Columns.SteelTotal); }
			set { SetColumnValue(Columns.SteelTotal, value); }
		}
		  
		[XmlAttribute("SteelShipped")]
		[Bindable(true)]
		public decimal? SteelShipped 
		{
			get { return GetColumnValue<decimal?>(Columns.SteelShipped); }
			set { SetColumnValue(Columns.SteelShipped, value); }
		}
		  
		[XmlAttribute("SteelInstalled")]
		[Bindable(true)]
		public decimal? SteelInstalled 
		{
			get { return GetColumnValue<decimal?>(Columns.SteelInstalled); }
			set { SetColumnValue(Columns.SteelInstalled, value); }
		}
		  
		[XmlAttribute("LeadTotal")]
		[Bindable(true)]
		public decimal? LeadTotal 
		{
			get { return GetColumnValue<decimal?>(Columns.LeadTotal); }
			set { SetColumnValue(Columns.LeadTotal, value); }
		}
		  
		[XmlAttribute("LeadShipped")]
		[Bindable(true)]
		public decimal? LeadShipped 
		{
			get { return GetColumnValue<decimal?>(Columns.LeadShipped); }
			set { SetColumnValue(Columns.LeadShipped, value); }
		}
		  
		[XmlAttribute("LeadInstalled")]
		[Bindable(true)]
		public decimal? LeadInstalled 
		{
			get { return GetColumnValue<decimal?>(Columns.LeadInstalled); }
			set { SetColumnValue(Columns.LeadInstalled, value); }
		}
		  
		[XmlAttribute("BearingPlateCompletion")]
		[Bindable(true)]
		public DateTime? BearingPlateCompletion 
		{
			get { return GetColumnValue<DateTime?>(Columns.BearingPlateCompletion); }
			set { SetColumnValue(Columns.BearingPlateCompletion, value); }
		}
		  
		[XmlAttribute("SteelSetDate")]
		[Bindable(true)]
		public DateTime? SteelSetDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.SteelSetDate); }
			set { SetColumnValue(Columns.SteelSetDate, value); }
		}
		  
		[XmlAttribute("AvgNumberOfWorkers")]
		[Bindable(true)]
		public decimal? AvgNumberOfWorkers 
		{
			get { return GetColumnValue<decimal?>(Columns.AvgNumberOfWorkers); }
			set { SetColumnValue(Columns.AvgNumberOfWorkers, value); }
		}
		  
		[XmlAttribute("QAStatus")]
		[Bindable(true)]
		public string QAStatus 
		{
			get { return GetColumnValue<string>(Columns.QAStatus); }
			set { SetColumnValue(Columns.QAStatus, value); }
		}
		  
		[XmlAttribute("ProjectStartDate")]
		[Bindable(true)]
		public DateTime? ProjectStartDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ProjectStartDate); }
			set { SetColumnValue(Columns.ProjectStartDate, value); }
		}
		  
		[XmlAttribute("DoorFrameInstallDate")]
		[Bindable(true)]
		public DateTime? DoorFrameInstallDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.DoorFrameInstallDate); }
			set { SetColumnValue(Columns.DoorFrameInstallDate, value); }
		}
		  
		[XmlAttribute("DoorInstallDate")]
		[Bindable(true)]
		public DateTime? DoorInstallDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.DoorInstallDate); }
			set { SetColumnValue(Columns.DoorInstallDate, value); }
		}
		  
		[XmlAttribute("QualityOfWork")]
		[Bindable(true)]
		public string QualityOfWork 
		{
			get { return GetColumnValue<string>(Columns.QualityOfWork); }
			set { SetColumnValue(Columns.QualityOfWork, value); }
		}
		  
		[XmlAttribute("CoordinatedItemsOpen")]
		[Bindable(true)]
		public string CoordinatedItemsOpen 
		{
			get { return GetColumnValue<string>(Columns.CoordinatedItemsOpen); }
			set { SetColumnValue(Columns.CoordinatedItemsOpen, value); }
		}
		  
		[XmlAttribute("ProspectusDate")]
		[Bindable(true)]
		public DateTime? ProspectusDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ProspectusDate); }
			set { SetColumnValue(Columns.ProspectusDate, value); }
		}
		  
		[XmlAttribute("LeadShieldingShipDate")]
		[Bindable(true)]
		public DateTime? LeadShieldingShipDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.LeadShieldingShipDate); }
			set { SetColumnValue(Columns.LeadShieldingShipDate, value); }
		}
		  
		[XmlAttribute("LeadShieldingInstallDate")]
		[Bindable(true)]
		public DateTime? LeadShieldingInstallDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.LeadShieldingInstallDate); }
			set { SetColumnValue(Columns.LeadShieldingInstallDate, value); }
		}
		  
		[XmlAttribute("SteelShieldingOrderDate")]
		[Bindable(true)]
		public DateTime? SteelShieldingOrderDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.SteelShieldingOrderDate); }
			set { SetColumnValue(Columns.SteelShieldingOrderDate, value); }
		}
		  
		[XmlAttribute("SteelShieldingShipDate")]
		[Bindable(true)]
		public DateTime? SteelShieldingShipDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.SteelShieldingShipDate); }
			set { SetColumnValue(Columns.SteelShieldingShipDate, value); }
		}
		  
		[XmlAttribute("SteelShieldingInstallDate")]
		[Bindable(true)]
		public DateTime? SteelShieldingInstallDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.SteelShieldingInstallDate); }
			set { SetColumnValue(Columns.SteelShieldingInstallDate, value); }
		}
		  
		[XmlAttribute("LeadShieldingOrderDate")]
		[Bindable(true)]
		public DateTime? LeadShieldingOrderDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.LeadShieldingOrderDate); }
			set { SetColumnValue(Columns.LeadShieldingOrderDate, value); }
		}
		  
		[XmlAttribute("QAInspections")]
		[Bindable(true)]
		public int? QAInspections 
		{
			get { return GetColumnValue<int?>(Columns.QAInspections); }
			set { SetColumnValue(Columns.QAInspections, value); }
		}
		  
		[XmlAttribute("NumberOfRooms")]
		[Bindable(true)]
		public int? NumberOfRooms 
		{
			get { return GetColumnValue<int?>(Columns.NumberOfRooms); }
			set { SetColumnValue(Columns.NumberOfRooms, value); }
		}
		  
		[XmlAttribute("InitialTakeOffDate")]
		[Bindable(true)]
		public DateTime? InitialTakeOffDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.InitialTakeOffDate); }
			set { SetColumnValue(Columns.InitialTakeOffDate, value); }
		}
		  
		[XmlAttribute("InitialTakeOffAmount")]
		[Bindable(true)]
		public decimal? InitialTakeOffAmount 
		{
			get { return GetColumnValue<decimal?>(Columns.InitialTakeOffAmount); }
			set { SetColumnValue(Columns.InitialTakeOffAmount, value); }
		}
		  
		[XmlAttribute("InitialProposalDate")]
		[Bindable(true)]
		public DateTime? InitialProposalDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.InitialProposalDate); }
			set { SetColumnValue(Columns.InitialProposalDate, value); }
		}
		  
		[XmlAttribute("InitialProposalAmount")]
		[Bindable(true)]
		public decimal? InitialProposalAmount 
		{
			get { return GetColumnValue<decimal?>(Columns.InitialProposalAmount); }
			set { SetColumnValue(Columns.InitialProposalAmount, value); }
		}
		  
		[XmlAttribute("ContractSentDate")]
		[Bindable(true)]
		public DateTime? ContractSentDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ContractSentDate); }
			set { SetColumnValue(Columns.ContractSentDate, value); }
		}
		  
		[XmlAttribute("ContractSignedDate")]
		[Bindable(true)]
		public DateTime? ContractSignedDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ContractSignedDate); }
			set { SetColumnValue(Columns.ContractSignedDate, value); }
		}
		  
		[XmlAttribute("AuthorizationToProceedDate")]
		[Bindable(true)]
		public DateTime? AuthorizationToProceedDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.AuthorizationToProceedDate); }
			set { SetColumnValue(Columns.AuthorizationToProceedDate, value); }
		}
		  
		[XmlAttribute("InstallStartDate")]
		[Bindable(true)]
		public DateTime? InstallStartDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.InstallStartDate); }
			set { SetColumnValue(Columns.InstallStartDate, value); }
		}
		  
		[XmlAttribute("InstallCompleteDate")]
		[Bindable(true)]
		public DateTime? InstallCompleteDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.InstallCompleteDate); }
			set { SetColumnValue(Columns.InstallCompleteDate, value); }
		}
		  
		[XmlAttribute("ShippingStartDate")]
		[Bindable(true)]
		public DateTime? ShippingStartDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ShippingStartDate); }
			set { SetColumnValue(Columns.ShippingStartDate, value); }
		}
		  
		[XmlAttribute("ShippingCompleteDate")]
		[Bindable(true)]
		public DateTime? ShippingCompleteDate 
		{
			get { return GetColumnValue<DateTime?>(Columns.ShippingCompleteDate); }
			set { SetColumnValue(Columns.ShippingCompleteDate, value); }
		}
		  
		[XmlAttribute("FirstTruckOutFleetwood")]
		[Bindable(true)]
		public DateTime? FirstTruckOutFleetwood 
		{
			get { return GetColumnValue<DateTime?>(Columns.FirstTruckOutFleetwood); }
			set { SetColumnValue(Columns.FirstTruckOutFleetwood, value); }
		}
		  
		[XmlAttribute("FirstTruckOnsite")]
		[Bindable(true)]
		public DateTime? FirstTruckOnsite 
		{
			get { return GetColumnValue<DateTime?>(Columns.FirstTruckOnsite); }
			set { SetColumnValue(Columns.FirstTruckOnsite, value); }
		}
		  
		[XmlAttribute("LastTruckOutFleetwood")]
		[Bindable(true)]
		public DateTime? LastTruckOutFleetwood 
		{
			get { return GetColumnValue<DateTime?>(Columns.LastTruckOutFleetwood); }
			set { SetColumnValue(Columns.LastTruckOutFleetwood, value); }
		}
		  
		[XmlAttribute("LastTruckOnsite")]
		[Bindable(true)]
		public DateTime? LastTruckOnsite 
		{
			get { return GetColumnValue<DateTime?>(Columns.LastTruckOnsite); }
			set { SetColumnValue(Columns.LastTruckOnsite, value); }
		}
		  
		[XmlAttribute("Created")]
		[Bindable(true)]
		public DateTime? Created 
		{
			get { return GetColumnValue<DateTime?>(Columns.Created); }
			set { SetColumnValue(Columns.Created, value); }
		}
		  
		[XmlAttribute("WallDiagramFile")]
		[Bindable(true)]
		public string WallDiagramFile 
		{
			get { return GetColumnValue<string>(Columns.WallDiagramFile); }
			set { SetColumnValue(Columns.WallDiagramFile, value); }
		}
		  
		[XmlAttribute("CreatedBy")]
		[Bindable(true)]
		public string CreatedBy 
		{
			get { return GetColumnValue<string>(Columns.CreatedBy); }
			set { SetColumnValue(Columns.CreatedBy, value); }
		}
		  
		[XmlAttribute("UpdatedBy")]
		[Bindable(true)]
		public string UpdatedBy 
		{
			get { return GetColumnValue<string>(Columns.UpdatedBy); }
			set { SetColumnValue(Columns.UpdatedBy, value); }
		}
		  
		[XmlAttribute("Updated")]
		[Bindable(true)]
		public DateTime? Updated 
		{
			get { return GetColumnValue<DateTime?>(Columns.Updated); }
			set { SetColumnValue(Columns.Updated, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(string varProjectNumber,string varProjectName,string varProjectLead,string varProjectType,string varProjectPhase,string varProjectActivity,string varLocation,int? varPMUserID,int? varSalespersonID,string varPMAssigned,string varDirectoryPath,decimal? varPercentComplete,decimal? varShippingPercentage,decimal? varInstallPercentage,string varRoomSummary,string varDoorSummary,int? varTotalTrucks,int? varTrucksShippedToDate,int? varTrucksRemaining,decimal? varTakeOffBlockCount,decimal? varBlocksShippedToDate,decimal? varBlocksInstalledToDate,decimal? varSteelTotal,decimal? varSteelShipped,decimal? varSteelInstalled,decimal? varLeadTotal,decimal? varLeadShipped,decimal? varLeadInstalled,DateTime? varBearingPlateCompletion,DateTime? varSteelSetDate,decimal? varAvgNumberOfWorkers,string varQAStatus,DateTime? varProjectStartDate,DateTime? varDoorFrameInstallDate,DateTime? varDoorInstallDate,string varQualityOfWork,string varCoordinatedItemsOpen,DateTime? varProspectusDate,DateTime? varLeadShieldingShipDate,DateTime? varLeadShieldingInstallDate,DateTime? varSteelShieldingOrderDate,DateTime? varSteelShieldingShipDate,DateTime? varSteelShieldingInstallDate,DateTime? varLeadShieldingOrderDate,int? varQAInspections,int? varNumberOfRooms,DateTime? varInitialTakeOffDate,decimal? varInitialTakeOffAmount,DateTime? varInitialProposalDate,decimal? varInitialProposalAmount,DateTime? varContractSentDate,DateTime? varContractSignedDate,DateTime? varAuthorizationToProceedDate,DateTime? varInstallStartDate,DateTime? varInstallCompleteDate,DateTime? varShippingStartDate,DateTime? varShippingCompleteDate,DateTime? varFirstTruckOutFleetwood,DateTime? varFirstTruckOnsite,DateTime? varLastTruckOutFleetwood,DateTime? varLastTruckOnsite,DateTime? varCreated,string varWallDiagramFile,string varCreatedBy,string varUpdatedBy,DateTime? varUpdated)
		{
			Project item = new Project();
			
			item.ProjectNumber = varProjectNumber;
			
			item.ProjectName = varProjectName;
			
			item.ProjectLead = varProjectLead;
			
			item.ProjectType = varProjectType;
			
			item.ProjectPhase = varProjectPhase;
			
			item.ProjectActivity = varProjectActivity;
			
			item.Location = varLocation;
			
			item.PMUserID = varPMUserID;
			
			item.SalespersonID = varSalespersonID;
			
			item.PMAssigned = varPMAssigned;
			
			item.DirectoryPath = varDirectoryPath;
			
			item.PercentComplete = varPercentComplete;
			
			item.ShippingPercentage = varShippingPercentage;
			
			item.InstallPercentage = varInstallPercentage;
			
			item.RoomSummary = varRoomSummary;
			
			item.DoorSummary = varDoorSummary;
			
			item.TotalTrucks = varTotalTrucks;
			
			item.TrucksShippedToDate = varTrucksShippedToDate;
			
			item.TrucksRemaining = varTrucksRemaining;
			
			item.TakeOffBlockCount = varTakeOffBlockCount;
			
			item.BlocksShippedToDate = varBlocksShippedToDate;
			
			item.BlocksInstalledToDate = varBlocksInstalledToDate;
			
			item.SteelTotal = varSteelTotal;
			
			item.SteelShipped = varSteelShipped;
			
			item.SteelInstalled = varSteelInstalled;
			
			item.LeadTotal = varLeadTotal;
			
			item.LeadShipped = varLeadShipped;
			
			item.LeadInstalled = varLeadInstalled;
			
			item.BearingPlateCompletion = varBearingPlateCompletion;
			
			item.SteelSetDate = varSteelSetDate;
			
			item.AvgNumberOfWorkers = varAvgNumberOfWorkers;
			
			item.QAStatus = varQAStatus;
			
			item.ProjectStartDate = varProjectStartDate;
			
			item.DoorFrameInstallDate = varDoorFrameInstallDate;
			
			item.DoorInstallDate = varDoorInstallDate;
			
			item.QualityOfWork = varQualityOfWork;
			
			item.CoordinatedItemsOpen = varCoordinatedItemsOpen;
			
			item.ProspectusDate = varProspectusDate;
			
			item.LeadShieldingShipDate = varLeadShieldingShipDate;
			
			item.LeadShieldingInstallDate = varLeadShieldingInstallDate;
			
			item.SteelShieldingOrderDate = varSteelShieldingOrderDate;
			
			item.SteelShieldingShipDate = varSteelShieldingShipDate;
			
			item.SteelShieldingInstallDate = varSteelShieldingInstallDate;
			
			item.LeadShieldingOrderDate = varLeadShieldingOrderDate;
			
			item.QAInspections = varQAInspections;
			
			item.NumberOfRooms = varNumberOfRooms;
			
			item.InitialTakeOffDate = varInitialTakeOffDate;
			
			item.InitialTakeOffAmount = varInitialTakeOffAmount;
			
			item.InitialProposalDate = varInitialProposalDate;
			
			item.InitialProposalAmount = varInitialProposalAmount;
			
			item.ContractSentDate = varContractSentDate;
			
			item.ContractSignedDate = varContractSignedDate;
			
			item.AuthorizationToProceedDate = varAuthorizationToProceedDate;
			
			item.InstallStartDate = varInstallStartDate;
			
			item.InstallCompleteDate = varInstallCompleteDate;
			
			item.ShippingStartDate = varShippingStartDate;
			
			item.ShippingCompleteDate = varShippingCompleteDate;
			
			item.FirstTruckOutFleetwood = varFirstTruckOutFleetwood;
			
			item.FirstTruckOnsite = varFirstTruckOnsite;
			
			item.LastTruckOutFleetwood = varLastTruckOutFleetwood;
			
			item.LastTruckOnsite = varLastTruckOnsite;
			
			item.Created = varCreated;
			
			item.WallDiagramFile = varWallDiagramFile;
			
			item.CreatedBy = varCreatedBy;
			
			item.UpdatedBy = varUpdatedBy;
			
			item.Updated = varUpdated;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varId,string varProjectNumber,string varProjectName,string varProjectLead,string varProjectType,string varProjectPhase,string varProjectActivity,string varLocation,int? varPMUserID,int? varSalespersonID,string varPMAssigned,string varDirectoryPath,decimal? varPercentComplete,decimal? varShippingPercentage,decimal? varInstallPercentage,string varRoomSummary,string varDoorSummary,int? varTotalTrucks,int? varTrucksShippedToDate,int? varTrucksRemaining,decimal? varTakeOffBlockCount,decimal? varBlocksShippedToDate,decimal? varBlocksInstalledToDate,decimal? varSteelTotal,decimal? varSteelShipped,decimal? varSteelInstalled,decimal? varLeadTotal,decimal? varLeadShipped,decimal? varLeadInstalled,DateTime? varBearingPlateCompletion,DateTime? varSteelSetDate,decimal? varAvgNumberOfWorkers,string varQAStatus,DateTime? varProjectStartDate,DateTime? varDoorFrameInstallDate,DateTime? varDoorInstallDate,string varQualityOfWork,string varCoordinatedItemsOpen,DateTime? varProspectusDate,DateTime? varLeadShieldingShipDate,DateTime? varLeadShieldingInstallDate,DateTime? varSteelShieldingOrderDate,DateTime? varSteelShieldingShipDate,DateTime? varSteelShieldingInstallDate,DateTime? varLeadShieldingOrderDate,int? varQAInspections,int? varNumberOfRooms,DateTime? varInitialTakeOffDate,decimal? varInitialTakeOffAmount,DateTime? varInitialProposalDate,decimal? varInitialProposalAmount,DateTime? varContractSentDate,DateTime? varContractSignedDate,DateTime? varAuthorizationToProceedDate,DateTime? varInstallStartDate,DateTime? varInstallCompleteDate,DateTime? varShippingStartDate,DateTime? varShippingCompleteDate,DateTime? varFirstTruckOutFleetwood,DateTime? varFirstTruckOnsite,DateTime? varLastTruckOutFleetwood,DateTime? varLastTruckOnsite,DateTime? varCreated,string varWallDiagramFile,string varCreatedBy,string varUpdatedBy,DateTime? varUpdated)
		{
			Project item = new Project();
			
				item.Id = varId;
			
				item.ProjectNumber = varProjectNumber;
			
				item.ProjectName = varProjectName;
			
				item.ProjectLead = varProjectLead;
			
				item.ProjectType = varProjectType;
			
				item.ProjectPhase = varProjectPhase;
			
				item.ProjectActivity = varProjectActivity;
			
				item.Location = varLocation;
			
				item.PMUserID = varPMUserID;
			
				item.SalespersonID = varSalespersonID;
			
				item.PMAssigned = varPMAssigned;
			
				item.DirectoryPath = varDirectoryPath;
			
				item.PercentComplete = varPercentComplete;
			
				item.ShippingPercentage = varShippingPercentage;
			
				item.InstallPercentage = varInstallPercentage;
			
				item.RoomSummary = varRoomSummary;
			
				item.DoorSummary = varDoorSummary;
			
				item.TotalTrucks = varTotalTrucks;
			
				item.TrucksShippedToDate = varTrucksShippedToDate;
			
				item.TrucksRemaining = varTrucksRemaining;
			
				item.TakeOffBlockCount = varTakeOffBlockCount;
			
				item.BlocksShippedToDate = varBlocksShippedToDate;
			
				item.BlocksInstalledToDate = varBlocksInstalledToDate;
			
				item.SteelTotal = varSteelTotal;
			
				item.SteelShipped = varSteelShipped;
			
				item.SteelInstalled = varSteelInstalled;
			
				item.LeadTotal = varLeadTotal;
			
				item.LeadShipped = varLeadShipped;
			
				item.LeadInstalled = varLeadInstalled;
			
				item.BearingPlateCompletion = varBearingPlateCompletion;
			
				item.SteelSetDate = varSteelSetDate;
			
				item.AvgNumberOfWorkers = varAvgNumberOfWorkers;
			
				item.QAStatus = varQAStatus;
			
				item.ProjectStartDate = varProjectStartDate;
			
				item.DoorFrameInstallDate = varDoorFrameInstallDate;
			
				item.DoorInstallDate = varDoorInstallDate;
			
				item.QualityOfWork = varQualityOfWork;
			
				item.CoordinatedItemsOpen = varCoordinatedItemsOpen;
			
				item.ProspectusDate = varProspectusDate;
			
				item.LeadShieldingShipDate = varLeadShieldingShipDate;
			
				item.LeadShieldingInstallDate = varLeadShieldingInstallDate;
			
				item.SteelShieldingOrderDate = varSteelShieldingOrderDate;
			
				item.SteelShieldingShipDate = varSteelShieldingShipDate;
			
				item.SteelShieldingInstallDate = varSteelShieldingInstallDate;
			
				item.LeadShieldingOrderDate = varLeadShieldingOrderDate;
			
				item.QAInspections = varQAInspections;
			
				item.NumberOfRooms = varNumberOfRooms;
			
				item.InitialTakeOffDate = varInitialTakeOffDate;
			
				item.InitialTakeOffAmount = varInitialTakeOffAmount;
			
				item.InitialProposalDate = varInitialProposalDate;
			
				item.InitialProposalAmount = varInitialProposalAmount;
			
				item.ContractSentDate = varContractSentDate;
			
				item.ContractSignedDate = varContractSignedDate;
			
				item.AuthorizationToProceedDate = varAuthorizationToProceedDate;
			
				item.InstallStartDate = varInstallStartDate;
			
				item.InstallCompleteDate = varInstallCompleteDate;
			
				item.ShippingStartDate = varShippingStartDate;
			
				item.ShippingCompleteDate = varShippingCompleteDate;
			
				item.FirstTruckOutFleetwood = varFirstTruckOutFleetwood;
			
				item.FirstTruckOnsite = varFirstTruckOnsite;
			
				item.LastTruckOutFleetwood = varLastTruckOutFleetwood;
			
				item.LastTruckOnsite = varLastTruckOnsite;
			
				item.Created = varCreated;
			
				item.WallDiagramFile = varWallDiagramFile;
			
				item.CreatedBy = varCreatedBy;
			
				item.UpdatedBy = varUpdatedBy;
			
				item.Updated = varUpdated;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn ProjectNumberColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn ProjectNameColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn ProjectLeadColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn ProjectTypeColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn ProjectPhaseColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ProjectActivityColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn LocationColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn PMUserIDColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn SalespersonIDColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn PMAssignedColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn DirectoryPathColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn PercentCompleteColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn ShippingPercentageColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn InstallPercentageColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn RoomSummaryColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn DoorSummaryColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn TotalTrucksColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn TrucksShippedToDateColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn TrucksRemainingColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn TakeOffBlockCountColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn BlocksShippedToDateColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn BlocksInstalledToDateColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn SteelTotalColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        public static TableSchema.TableColumn SteelShippedColumn
        {
            get { return Schema.Columns[24]; }
        }
        
        
        
        public static TableSchema.TableColumn SteelInstalledColumn
        {
            get { return Schema.Columns[25]; }
        }
        
        
        
        public static TableSchema.TableColumn LeadTotalColumn
        {
            get { return Schema.Columns[26]; }
        }
        
        
        
        public static TableSchema.TableColumn LeadShippedColumn
        {
            get { return Schema.Columns[27]; }
        }
        
        
        
        public static TableSchema.TableColumn LeadInstalledColumn
        {
            get { return Schema.Columns[28]; }
        }
        
        
        
        public static TableSchema.TableColumn BearingPlateCompletionColumn
        {
            get { return Schema.Columns[29]; }
        }
        
        
        
        public static TableSchema.TableColumn SteelSetDateColumn
        {
            get { return Schema.Columns[30]; }
        }
        
        
        
        public static TableSchema.TableColumn AvgNumberOfWorkersColumn
        {
            get { return Schema.Columns[31]; }
        }
        
        
        
        public static TableSchema.TableColumn QAStatusColumn
        {
            get { return Schema.Columns[32]; }
        }
        
        
        
        public static TableSchema.TableColumn ProjectStartDateColumn
        {
            get { return Schema.Columns[33]; }
        }
        
        
        
        public static TableSchema.TableColumn DoorFrameInstallDateColumn
        {
            get { return Schema.Columns[34]; }
        }
        
        
        
        public static TableSchema.TableColumn DoorInstallDateColumn
        {
            get { return Schema.Columns[35]; }
        }
        
        
        
        public static TableSchema.TableColumn QualityOfWorkColumn
        {
            get { return Schema.Columns[36]; }
        }
        
        
        
        public static TableSchema.TableColumn CoordinatedItemsOpenColumn
        {
            get { return Schema.Columns[37]; }
        }
        
        
        
        public static TableSchema.TableColumn ProspectusDateColumn
        {
            get { return Schema.Columns[38]; }
        }
        
        
        
        public static TableSchema.TableColumn LeadShieldingShipDateColumn
        {
            get { return Schema.Columns[39]; }
        }
        
        
        
        public static TableSchema.TableColumn LeadShieldingInstallDateColumn
        {
            get { return Schema.Columns[40]; }
        }
        
        
        
        public static TableSchema.TableColumn SteelShieldingOrderDateColumn
        {
            get { return Schema.Columns[41]; }
        }
        
        
        
        public static TableSchema.TableColumn SteelShieldingShipDateColumn
        {
            get { return Schema.Columns[42]; }
        }
        
        
        
        public static TableSchema.TableColumn SteelShieldingInstallDateColumn
        {
            get { return Schema.Columns[43]; }
        }
        
        
        
        public static TableSchema.TableColumn LeadShieldingOrderDateColumn
        {
            get { return Schema.Columns[44]; }
        }
        
        
        
        public static TableSchema.TableColumn QAInspectionsColumn
        {
            get { return Schema.Columns[45]; }
        }
        
        
        
        public static TableSchema.TableColumn NumberOfRoomsColumn
        {
            get { return Schema.Columns[46]; }
        }
        
        
        
        public static TableSchema.TableColumn InitialTakeOffDateColumn
        {
            get { return Schema.Columns[47]; }
        }
        
        
        
        public static TableSchema.TableColumn InitialTakeOffAmountColumn
        {
            get { return Schema.Columns[48]; }
        }
        
        
        
        public static TableSchema.TableColumn InitialProposalDateColumn
        {
            get { return Schema.Columns[49]; }
        }
        
        
        
        public static TableSchema.TableColumn InitialProposalAmountColumn
        {
            get { return Schema.Columns[50]; }
        }
        
        
        
        public static TableSchema.TableColumn ContractSentDateColumn
        {
            get { return Schema.Columns[51]; }
        }
        
        
        
        public static TableSchema.TableColumn ContractSignedDateColumn
        {
            get { return Schema.Columns[52]; }
        }
        
        
        
        public static TableSchema.TableColumn AuthorizationToProceedDateColumn
        {
            get { return Schema.Columns[53]; }
        }
        
        
        
        public static TableSchema.TableColumn InstallStartDateColumn
        {
            get { return Schema.Columns[54]; }
        }
        
        
        
        public static TableSchema.TableColumn InstallCompleteDateColumn
        {
            get { return Schema.Columns[55]; }
        }
        
        
        
        public static TableSchema.TableColumn ShippingStartDateColumn
        {
            get { return Schema.Columns[56]; }
        }
        
        
        
        public static TableSchema.TableColumn ShippingCompleteDateColumn
        {
            get { return Schema.Columns[57]; }
        }
        
        
        
        public static TableSchema.TableColumn FirstTruckOutFleetwoodColumn
        {
            get { return Schema.Columns[58]; }
        }
        
        
        
        public static TableSchema.TableColumn FirstTruckOnsiteColumn
        {
            get { return Schema.Columns[59]; }
        }
        
        
        
        public static TableSchema.TableColumn LastTruckOutFleetwoodColumn
        {
            get { return Schema.Columns[60]; }
        }
        
        
        
        public static TableSchema.TableColumn LastTruckOnsiteColumn
        {
            get { return Schema.Columns[61]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedColumn
        {
            get { return Schema.Columns[62]; }
        }
        
        
        
        public static TableSchema.TableColumn WallDiagramFileColumn
        {
            get { return Schema.Columns[63]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedByColumn
        {
            get { return Schema.Columns[64]; }
        }
        
        
        
        public static TableSchema.TableColumn UpdatedByColumn
        {
            get { return Schema.Columns[65]; }
        }
        
        
        
        public static TableSchema.TableColumn UpdatedColumn
        {
            get { return Schema.Columns[66]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Id = @"ID";
			 public static string ProjectNumber = @"ProjectNumber";
			 public static string ProjectName = @"ProjectName";
			 public static string ProjectLead = @"ProjectLead";
			 public static string ProjectType = @"ProjectType";
			 public static string ProjectPhase = @"ProjectPhase";
			 public static string ProjectActivity = @"ProjectActivity";
			 public static string Location = @"Location";
			 public static string PMUserID = @"PMUserID";
			 public static string SalespersonID = @"SalespersonID";
			 public static string PMAssigned = @"PMAssigned";
			 public static string DirectoryPath = @"DirectoryPath";
			 public static string PercentComplete = @"PercentComplete";
			 public static string ShippingPercentage = @"ShippingPercentage";
			 public static string InstallPercentage = @"InstallPercentage";
			 public static string RoomSummary = @"RoomSummary";
			 public static string DoorSummary = @"DoorSummary";
			 public static string TotalTrucks = @"TotalTrucks";
			 public static string TrucksShippedToDate = @"TrucksShippedToDate";
			 public static string TrucksRemaining = @"TrucksRemaining";
			 public static string TakeOffBlockCount = @"TakeOffBlockCount";
			 public static string BlocksShippedToDate = @"BlocksShippedToDate";
			 public static string BlocksInstalledToDate = @"BlocksInstalledToDate";
			 public static string SteelTotal = @"SteelTotal";
			 public static string SteelShipped = @"SteelShipped";
			 public static string SteelInstalled = @"SteelInstalled";
			 public static string LeadTotal = @"LeadTotal";
			 public static string LeadShipped = @"LeadShipped";
			 public static string LeadInstalled = @"LeadInstalled";
			 public static string BearingPlateCompletion = @"BearingPlateCompletion";
			 public static string SteelSetDate = @"SteelSetDate";
			 public static string AvgNumberOfWorkers = @"AvgNumberOfWorkers";
			 public static string QAStatus = @"QAStatus";
			 public static string ProjectStartDate = @"ProjectStartDate";
			 public static string DoorFrameInstallDate = @"DoorFrameInstallDate";
			 public static string DoorInstallDate = @"DoorInstallDate";
			 public static string QualityOfWork = @"QualityOfWork";
			 public static string CoordinatedItemsOpen = @"CoordinatedItemsOpen";
			 public static string ProspectusDate = @"ProspectusDate";
			 public static string LeadShieldingShipDate = @"LeadShieldingShipDate";
			 public static string LeadShieldingInstallDate = @"LeadShieldingInstallDate";
			 public static string SteelShieldingOrderDate = @"SteelShieldingOrderDate";
			 public static string SteelShieldingShipDate = @"SteelShieldingShipDate";
			 public static string SteelShieldingInstallDate = @"SteelShieldingInstallDate";
			 public static string LeadShieldingOrderDate = @"LeadShieldingOrderDate";
			 public static string QAInspections = @"QAInspections";
			 public static string NumberOfRooms = @"NumberOfRooms";
			 public static string InitialTakeOffDate = @"InitialTakeOffDate";
			 public static string InitialTakeOffAmount = @"InitialTakeOffAmount";
			 public static string InitialProposalDate = @"InitialProposalDate";
			 public static string InitialProposalAmount = @"InitialProposalAmount";
			 public static string ContractSentDate = @"ContractSentDate";
			 public static string ContractSignedDate = @"ContractSignedDate";
			 public static string AuthorizationToProceedDate = @"AuthorizationToProceedDate";
			 public static string InstallStartDate = @"InstallStartDate";
			 public static string InstallCompleteDate = @"InstallCompleteDate";
			 public static string ShippingStartDate = @"ShippingStartDate";
			 public static string ShippingCompleteDate = @"ShippingCompleteDate";
			 public static string FirstTruckOutFleetwood = @"FirstTruckOutFleetwood";
			 public static string FirstTruckOnsite = @"FirstTruckOnsite";
			 public static string LastTruckOutFleetwood = @"LastTruckOutFleetwood";
			 public static string LastTruckOnsite = @"LastTruckOnsite";
			 public static string Created = @"Created";
			 public static string WallDiagramFile = @"WallDiagramFile";
			 public static string CreatedBy = @"CreatedBy";
			 public static string UpdatedBy = @"UpdatedBy";
			 public static string Updated = @"Updated";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
